[{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"BayLum: An Introduction","text":"'BayLum' provides collection various R functions Bayesian analysis luminescence data. Amongst others, includes data import, export, application age models palaeodose modelling. Data can processed simultaneously various samples, including input multiple BIN/BINX-files per sample single grain (SG) multi-grain (MG) OSL measurements. Stratigraphic constraints systematic errors can added constrain analysis . already know use R, 'BayLum' won’t difficult use, others, brief introduction may help make first steps R package 'BayLum' convenient possible.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"installing-baylum-package","dir":"Articles","previous_headings":"Introduction","what":"Installing `BayLum’ package","title":"BayLum: An Introduction","text":"read document installed R , first visit R project website download install R. may also consider installing Rstudio, provides excellent desktop working environment R; however prerequisite. also need external software JAGS (Just Another Gibs Sampler). Please visit JAGS webpage follow installation instructions. Now nearly ready work ‘BayLum’. yet installed ‘BayLum’, please run following two R code lines install ‘BayLum’ computer. Alternatively, can load already installed R package (‘BayLum’) session using following R call.","code":"install.packages(\"BayLum\", dependencies = TRUE) library(BayLum)"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"first-steps-age-analysis-of-one-sample","dir":"Articles","previous_headings":"","what":"First steps: age analysis of one sample","title":"BayLum: An Introduction","text":"Measurement data can imported using two different options detailed following: Option 1: Using conventional ‘BayLum’ folder structure (old) Option 2: Using single-setting config file (new)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"option-1-import-information-from-a-binbinx-file-","dir":"Articles","previous_headings":"First steps: age analysis of one sample","what":"Option 1: Import information from a BIN/BINX-file.","title":"BayLum: An Introduction","text":"Let us consider sample named samp1, example dataset coming package. information related sample stored subfolder called also samp1. test package example, first, add path example dataset object path. Please note dataset (.e. included package) replace call something like: example folder contains following subfolders files: See “required files subfolder?” manual Generate_DataFile() function meaning files. import data, simply call function Generate_DataFile():","code":"path <- paste0(system.file(\"extdata/\", package = \"BayLum\"), \"/\") path <- \"Users/Master_of_luminescence/Documents/MyFamousOSLData\" DATA1 <-   Generate_DataFile(     Path = path,     FolderNames = \"samp1\",     Nb_sample = 1,     verbose = FALSE) Warning in Generate_DataFile(Path = path, FolderNames = \"samp1\", Nb_sample = 1, : 'Generate_DataFile' est obsolète. Utilisez plutôt ‘create_DataFile()’. Voir help(\"Deprecated\")"},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"data-importexport","dir":"Articles","previous_headings":"First steps: age analysis of one sample > Option 1: Import information from a BIN/BINX-file. > Remarks","what":"Data import/export","title":"BayLum: An Introduction","text":"import may take , particular large BIN/BINX-files. can become annoying want play data. situations, makes sense save imported data somewhere else continuing. save obove imported data hardrive use load data use","code":"save(DATA1, file = \"YourPath/DATA1.RData\") load(DATA1, file = \"YourPath/DATA1.RData\")"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"data-structure","dir":"Articles","previous_headings":"First steps: age analysis of one sample > Option 1: Import information from a BIN/BINX-file. > Remarks","what":"Data structure","title":"BayLum: An Introduction","text":"see overall structure data generated BIN/BINX-file associated CSV-files, following call can used: reveals DATA1 basically list 9 elements:","code":"str(DATA1) List of 9  $ LT            :List of 1   ..$ : num [1, 1:7] 2.042 0.842 1.678 3.826 4.258 ...  $ sLT           :List of 1   ..$ : num [1, 1:7] 0.344 0.162 0.328 0.803 0.941 ...  $ ITimes        :List of 1   ..$ : num [1, 1:6] 15 30 60 100 0 15  $ dLab          : num [1:2, 1] 1.53e-01 5.89e-05  $ ddot_env      : num [1:2, 1] 2.512 0.0563  $ regDose       :List of 1   ..$ : num [1, 1:6] 2.3 4.6 9.21 15.35 0 ...  $ J             : num 1  $ K             : num 6  $ Nb_measurement: num 16"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"visualise-lxtx-values-and-dose-points","dir":"Articles","previous_headings":"First steps: age analysis of one sample > Option 1: Import information from a BIN/BINX-file. > Remarks","what":"Visualise Lx/Tx values and dose points","title":"BayLum: An Introduction","text":"get impression data look like, can visualise using function LT_RegenDose(): plot chunk unnamed-chunk-10 Note consider one sample, name folder name sample. reason argumetns set FolderNames = samp1 SampleNames = samp1.","code":"LT_RegenDose(   DATA = DATA1,   Path = path,   FolderNames = \"samp1\",   SampleNames = \"samp1\",   Nb_sample = 1,   nrow = NULL ) Warning in LT_RegenDose(DATA = DATA1, Path = path, FolderNames = \"samp1\", : 'LT_RegenDose' est obsolète. Utilisez plutôt ‘plot_RegDosePoints()’. Voir help(\"Deprecated\")"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"generate-data-file-from-binbinx-files-of-multi-grain-osl-measurements","dir":"Articles","previous_headings":"First steps: age analysis of one sample > Option 1: Import information from a BIN/BINX-file.","what":"Generate data file from BIN/BINX-files of multi-grain OSL measurements","title":"BayLum: An Introduction","text":"multi-grain OSL measurements, instead Generate_DataFile(), function Generate_DataFile_MG() used similar parameters. functions differ expectations: Disc.csv instead DiscPos.csv file Single-grain OSL Measurements. Please check type ?Generate_DataFile_MG information.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"option-2-import-data-using-create_datafile","dir":"Articles","previous_headings":"First steps: age analysis of one sample","what":"Option 2: Import data using create_DataFile()","title":"BayLum: An Introduction","text":"'BayLum' >= v0.3.2 introduced new function called create_DataFile(), point time replace function Generate_DataFile() Generate_DataFile_MG(). create_DataFile() works conceptionally different approach detailed . Key differences : function uses single configuration file samples measurement files error prone subfolder structure longer needed Measurement data can imported create_DataFile(), also outside function passed functions. enables possibility extensive pre-processing selection measurement data. configuration follows -called YAML format specification. single sample file looks follows: case , configuration file assumes data samp1 already imported treated R object called samp1 available global environment. following example code reproduces case:","code":"- sample: \"samp1\" files: null settings: dose_source: { value: 0.1535, error: 0.00005891 } dose_env: { value: 2.512, error: 0.05626 } rules: beginSignal: 6 endSignal: 8 beginBackground: 50 endBackground: 55 beginTest: 6 endTest: 8 beginTestBackground: 50 endTestBackground: 55 inflatePercent: 0.027 nbOfLastCycleToRemove: 1 ## get example file path from package yaml_file <- system.file(\"extdata/example.yml\", package = \"BayLum\") samp1_file <- system.file(\"extdata/samp1/bin.bin\", package = \"BayLum\")  ## read YAML manually and select only the first record  config_file <- yaml::read_yaml(yaml_file)[[1]]  ## import BIN/BINX files and select position 2 and grain 32 only samp1 <- Luminescence::read_BIN2R(samp1_file, verbose = FALSE) |>   subset(POSITION == 2 & GRAIN == 32)  ## create the data file DATA1 <- create_DataFile(config_file, verbose = FALSE)"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"age-computation","dir":"Articles","previous_headings":"First steps: age analysis of one sample","what":"Age computation","title":"BayLum: An Introduction","text":"compute age sample samp1, can run following code: plot chunk unnamed-chunk-12 also works DATA1 output Generate_DataFile_MG().","code":"Age <- Age_Computation(   DATA = DATA1,   SampleName = \"samp1\",   PriorAge = c(10, 100),   distribution = \"cauchy\",   LIN_fit = TRUE,   Origin_fit = FALSE,   Iter = 10000 ) Compiling model graph    Resolving undeclared variables    Allocating nodes Graph information:    Observed stochastic nodes: 6    Unobserved stochastic nodes: 9    Total graph size: 139  Initializing model >> Sample name << ---------------------------------------------- samp1  >> Results of the Gelman and Rubin criterion of convergence << ----------------------------------------------      Point estimate Uppers confidence interval A    1.043       1.102  D    1.042       1.098  sD   1.036       1.058    ---------------------------------------------------------------------------------------------------  *** WARNING: The following information are only valid if the MCMC chains have converged  *** ---------------------------------------------------------------------------------------------------  parameter    Bayes estimate       Credible interval  ---------------------------------------------- A        25.061                           lower bound     upper bound                  at level 95%    10          50.294                   at level 68%    10          21.841  ---------------------------------------------- D        62.212                           lower bound     upper bound                  at level 95%    19.675          125.768                   at level 68%    22.385          55.487  ---------------------------------------------- sD       44.674                           lower bound     upper bound                  at level 95%    0.15        126.445                   at level 68%    0.263       28.94"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remark-1-mcmc-trajectories","dir":"Articles","previous_headings":"","what":"BayLum: An Introduction","title":"BayLum: An Introduction","text":"MCMC trajectories converge, can add iteration parameter Iter function Age_Computation(), example Iter = 20000 Iter = 50000. desirable re-run model scratch, read increase precision prior distribution, specified can use argument PriorAge. example: PriorAge= c(0.01,10) young sample PriorAge = c(10,100) old sample. trajectories still convergering, whether choice made argument distribution dose-response curves meaningful.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remark-2-lin_fit-and-origin_fit-dose-response-curves-option","dir":"Articles","previous_headings":"","what":"BayLum: An Introduction","title":"BayLum: An Introduction","text":"default, saturating exponential plus linear dose response curve expected. However, choose formula changing arguments LIN_fit Origin_fit function.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remark-3-distribution-equivalent-dose-dispersion-option","dir":"Articles","previous_headings":"","what":"BayLum: An Introduction","title":"BayLum: An Introduction","text":"default, cauchy distribution assumed, can choose another distribution replacing word cauchy gaussian, lognormal_A lognormal_M argument distribution. difference models: lognormal_A lognormal_M equivalent dose dispersion distributed according : log-normal distribution mean average equal palaeodose first model log-normal distribution median equal palaeodose second model.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remark-4-savepdf-and-saveestimates-option","dir":"Articles","previous_headings":"","what":"BayLum: An Introduction","title":"BayLum: An Introduction","text":"two arguments allow save results files. SavePdf = TRUE create PDF-file MCMC trajectories parameters (age), D (palaeodose), sD (equivalent doses dispersion). specify OutputFileName OutputFilePath define name path PDF-file. SaveEstimates = TRUE saves CSV-file containing Bayes estimates, credible interval 68% 95% Gelman Rudin test convergence parameters , D, sD. export arguments OutputTableName OutputTablePath specified.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remark-4-priorage-option","dir":"Articles","previous_headings":"","what":"BayLum: An Introduction","title":"BayLum: An Introduction","text":"default, age 0.01 ka 100 ka expected. user informations sample, PriorAge modified accordingly. example, know sample older, can set PriorAge=c(10,120). contrast, know sample younger, may want set PriorAge=c(0.001,10). Ages <=0<=0 possible. minimum bound 0.001. Please note setting PriorAge trivial, wrongly set boundaries likely biasing results.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"multiple-binbinx-files-for-one-sample","dir":"Articles","previous_headings":"First steps: age analysis of one sample","what":"Multiple BIN/BINX-files for one sample","title":"BayLum: An Introduction","text":"previous example considered simplest case: one sample, one BIN/BINX-file. However, ‘BayLum’ allows process multiple BIN/BINX-files one sample. work multiple BIN/BINX-files, names subfolders need beset argument Names files need located unter Path. case call Generate_DataFile() (Generate_DataFile_MG()) becomes follows: plot chunk unnamed-chunk-14","code":"Names <- c(\"samp1\", \"samp2\") ##argument setting nbsample <- 1 nbbinfile <- length(Names) Binpersample <- c(length(Names))  ##call data file generator DATA_BF <- Generate_DataFile(   Path = path,   FolderNames = Names,   Nb_sample = nbsample,   Nb_binfile = nbbinfile,   BinPerSample = Binpersample,   verbose = FALSE ) Warning in Generate_DataFile(Path = path, FolderNames = Names, Nb_sample = nbsample, : 'Generate_DataFile' est obsolète. Utilisez plutôt ‘create_DataFile()’. Voir help(\"Deprecated\") ##calculate the age Age <- Age_Computation(   DATA = DATA_BF,   SampleName = Names,   BinPerSample = Binpersample ) Compiling model graph    Resolving undeclared variables    Allocating nodes Graph information:    Observed stochastic nodes: 12    Unobserved stochastic nodes: 15    Total graph size: 221  Initializing model >> Sample name << ---------------------------------------------- samp1 samp2  >> Results of the Gelman and Rubin criterion of convergence << ----------------------------------------------      Point estimate Uppers confidence interval A    1.018       1.023  D    1.022       1.027  sD   1.044       1.057    ---------------------------------------------------------------------------------------------------  *** WARNING: The following information are only valid if the MCMC chains have converged  *** ---------------------------------------------------------------------------------------------------  parameter    Bayes estimate       Credible interval  ---------------------------------------------- A        2.312                           lower bound     upper bound                  at level 95%    0.86        3.819                   at level 68%    1.65        2.728  ---------------------------------------------- D        5.75                           lower bound     upper bound                  at level 95%    2.602       9.545                   at level 68%    4.453       6.886  ---------------------------------------------- sD       0.881                           lower bound     upper bound                  at level 95%    0.003       3.318                   at level 68%    0.003       0.846"},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"generate-data-file-from-binbinx-files","dir":"Articles","previous_headings":"Age analysis of various samples","what":"Generate data file from BIN/BINX-files","title":"BayLum: An Introduction","text":"function Generate_DataFile() (Generate_DataFile_MF()) can process multiple files simultaneously including multiple BIN/BINX-files per sample. assume interested two samples named: sample1 sample2. addition, two BIN/BINX-files first sample named: sample1-1 sample1-2, one BIN-file 2nd sample named sample2-1. case, need three subfolders named sample1-1, sample1-2 sample2-1; subfolder containing one BIN-file named bin.bin, associated files DiscPos.csv, DoseEnv.csv, DoseSourve.csv rule.csv. 3 subfolders must located path. fill argument corectly BinPerSample: binpersample=c(2⏟sample 1: 2 bin files,1⏟sample 2: 1 bin file)binpersample=c(\\underbrace{2}_{\\text{sample 1: 2 bin files}},\\underbrace{1}_{\\text{sample 2: 1 bin file}})","code":"Names <-   c(\"sample1-1\", \"sample1-2\", \"sample2-1\") # give the name of the folder datat nbsample <- 2    # give the number of samples nbbinfile <- 3   # give the number of bin files DATA <- Generate_DataFile(   Path = path,   FolderNames = Names,   Nb_sample = nbsample,   Nb_binfile = nbbinfile,   BinPerSample = binpersample )"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"combine-files-using-the-function-combine_datafiles","dir":"Articles","previous_headings":"Age analysis of various samples > Generate data file from BIN/BINX-files","what":"Combine files using the function combine_DataFiles()","title":"BayLum: An Introduction","text":"user already saved informations imported Generate_DataFile() function (Generate_DataFile_MG() function) data can concatenate function combine_DataFiles(). example, DATA1 output sample named “GDB3”, DATA2 output sample “GDB5”, data can merged following call: data structure become follows 2 lists (1 list per sample) DATA$LT, DATA$sLT, DATA1$ITimes DATA1$regDose matrix 2 columns (1 line per sample) DATA1$dLab, DATA1$ddot_env 2 integers (1 integer per BIN files 1 BIN-file per sample) DATA1$J, DATA1$K, DATA1$Nb_measurement. Single-grain multiple-grain OSL measurements can merged way. plot L/TL/T function regenerative dose function LT_RegenDose() can used : Note: example DATA3 contains information samples ‘GDB3’ ‘GDB5’, single-grain OSL measurements. correct treatment argument SG manually set user. Please see function manual details.","code":"data(\"DATA1\", envir = environment()) data(\"DATA2\", envir = environment()) DATA3 <- combine_DataFiles(L1 = DATA2, L2 = DATA1) str(DATA3) List of 11  $ LT            :List of 2   ..$ : num [1:188, 1:6] 4.54 2.73 2.54 2.27 1.48 ...   ..$ : num [1:101, 1:6] 5.66 6.9 4.05 3.43 4.97 ...  $ sLT           :List of 2   ..$ : num [1:188, 1:6] 0.333 0.386 0.128 0.171 0.145 ...   ..$ : num [1:101, 1:6] 0.373 0.315 0.245 0.181 0.246 ...  $ ITimes        :List of 2   ..$ : num [1:188, 1:5] 40 40 40 40 40 40 40 40 40 40 ...   ..$ : num [1:101, 1:5] 160 160 160 160 160 160 160 160 160 160 ...  $ dLab          : num [1:2, 1:2] 1.53e-01 5.89e-05 1.53e-01 5.89e-05  $ ddot_env      : num [1:2, 1:2] 2.512 0.0563 2.26 0.0617  $ regDose       :List of 2   ..$ : num [1:188, 1:5] 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 ...   ..$ : num [1:101, 1:5] 24.6 24.6 24.6 24.6 24.6 ...  $ J             : num [1:2] 188 101  $ K             : num [1:2] 5 5  $ Nb_measurement: num [1:2] 14 14  $ SampleNames   : chr [1:2] \"samp 1\" \"samp 1\"  $ Nb_sample     : num 2  - attr(*, \"originator\")= chr \"create_DataFile\" plot_RegDosePoints(DATA3)"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"age-analysis-without-stratigraphic-constraints","dir":"Articles","previous_headings":"Age analysis of various samples","what":"Age analysis without stratigraphic constraints","title":"BayLum: An Introduction","text":"stratigraphic constraints set, following code can used analyse age sample GDB5 GDB3 simultaneously. plot chunk unnamed-chunk-18 plot chunk unnamed-chunk-18 plot chunk unnamed-chunk-18 Note: automated parallel processing can set argument jags_method = \"rjags\" jags_method = \"rjparallel\".","code":"priorage = c(1, 10, 10, 100) Age <- AgeS_Computation(   DATA = DATA3,   Nb_sample = 2,   SampleNames = c(\"GDB5\", \"GDB3\"),   PriorAge = priorage,   distribution = \"cauchy\",   LIN_fit = TRUE,   Origin_fit = FALSE,   Iter = 1000,    jags_method = \"rjags\" ) Warning: No initial values were provided - JAGS will use the same initial values for all chains Compiling rjags model... Calling the simulation using the rjags method... Adapting the model for 1000 iterations... Running the model for 5000 iterations... Simulation complete Calculating summary statistics... Calculating the Gelman-Rubin statistic for 6 variables.... Finished running the simulation >> Results of the Gelman and Rubin criterion of convergence << ----------------------------------------------  Sample name:  GDB5  ---------------------          Point estimate Uppers confidence interval A_GDB5   1.002       1.005  D_GDB5   1.003       1.012  sD_GDB5      1.006       1.021  ----------------------------------------------  Sample name:  GDB3  ---------------------          Point estimate Uppers confidence interval A_GDB3   1       1  D_GDB3   1.001       1.002  sD_GDB3      1.001       1.005    ---------------------------------------------------------------------------------------------------  *** WARNING: The following information are only valid if the MCMC chains have converged  *** ---------------------------------------------------------------------------------------------------    >> Bayes estimates of Age, Palaeodose and its dispersion for each sample and credible interval << ----------------------------------------------  Sample name:  GDB5  --------------------- Parameter    Bayes estimate       Credible interval   A_GDB5      7.132                           lower bound     upper bound                  at level 95%    5.783       8.596                   at level 68%    6.298       7.677   Parameter    Bayes estimate       Credible interval   D_GDB5      17.798                           lower bound     upper bound                  at level 95%    16.725          19.004                   at level 68%    17.145          18.332   Parameter    Bayes estimate       Credible interval  sD_GDB5      4.53                           lower bound     upper bound                  at level 95%    3.544       5.782                   at level 68%    4.028       5.142  ----------------------------------------------  Sample name:  GDB3  --------------------- Parameter    Bayes estimate       Credible interval   A_GDB3      46.979                           lower bound     upper bound                  at level 95%    36.343          57.758                   at level 68%    40.774          51.082   Parameter    Bayes estimate       Credible interval   D_GDB3      104.689                           lower bound     upper bound                  at level 95%    96.694          112.104                   at level 68%    101.184         108.653   Parameter    Bayes estimate       Credible interval  sD_GDB3      16.236                           lower bound     upper bound                  at level 95%    9.985       21.678                   at level 68%    12.11       18.146   ----------------------------------------------"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"remarks-1","dir":"Articles","previous_headings":"Age analysis of various samples > Age analysis without stratigraphic constraints","what":"Remarks","title":"BayLum: An Introduction","text":"function Age_computation(), age sample set default 0.01 ka 100 ka. informations samples possible change PriorAge parameters. PriorAge vector size = 2*$Nb_sample, two first values PriorAge concern 1st sample, next two values 2nd sample . example, know sample named GDB5 young sample whose age 0.01 ka 10 ka, GDB3 old sample whose age 10 ka 100 ka, PriorAge=c(0.01,10⏟GDB5priorage,10,100⏟GDB3priorage)PriorAge=c(\\underbrace{0.01,10}_{GDB5\\ prior\\ age},\\underbrace{10,100}_{GDB3\\ prior\\ age})","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"age-analysis-with-stratigraphic-constraints","dir":"Articles","previous_headings":"Age analysis of various samples","what":"Age analysis with stratigraphic constraints","title":"BayLum: An Introduction","text":"function AgeS_Computation() possible take stratigraphic relations samples account define constraints. example, know GDB5 higher stratigraphical position, hence likely younger age sample GDB3.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"ordering-samples","dir":"Articles","previous_headings":"Age analysis of various samples > Age analysis with stratigraphic constraints","what":"Ordering samples","title":"BayLum: An Introduction","text":"take account stratigraphic constraints, information samples need ordered. Either enter sample name (corresponding subfolder names) Names parameter function Generate_DataFile(), ordered order increasing ages enter saved .RData informations sample combine_DataFiles(), ordered increasing ages.","code":"# using Generate_DataFile function Names <- c(\"samp1\", \"samp2\") nbsample <- 2 DATA3 <- Generate_DataFile(   Path = path,   FolderNames = Names,   Nb_sample = nbsample,   verbose = FALSE ) Warning in Generate_DataFile(Path = path, FolderNames = Names, Nb_sample = nbsample, : 'Generate_DataFile' est obsolète. Utilisez plutôt ‘create_DataFile()’. Voir help(\"Deprecated\") # using the function combine_DataFiles() data(DATA1, envir = environment()) # .RData on sample GDB3 data(DATA2, envir = environment()) # .RData on sample GDB5 DATA3 <- combine_DataFiles(L1 = DATA1, L2 = DATA2)"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"define-matrix-to-set-stratigraphic-constraints","dir":"Articles","previous_headings":"Age analysis of various samples > Age analysis with stratigraphic constraints","what":"Define matrix to set stratigraphic constraints","title":"BayLum: An Introduction","text":"Let SC matrix containing information stratigraphic relations two samples. matrix defined follows: matrix dimensions: row number StratiConstraints matrix equal Nb_sample+1, column number equal Nb_sampleNb\\_sample. first matrix row: ii {1,...,Nb_Sample}\\{1,...,Nb\\_Sample\\}, StratiConstraints[1,] <- 1, means lower bound sample age given PriorAge[2i-1] sample whose number ID equal ii taken account sample relations: jj ${2,…,Nb_Sample+1}$ ii {j,...,Nb_Sample}\\{j,...,Nb\\_Sample\\}, StratiConstraints[j,] <- 1 sample age whose ID equal j−1j-1 lower sample age whose ID equal ii. Otherwise, StratiConstraints[j,] <- 0. define matrix function SCMatrix() can used: case: 2 samples, SC matrix 3 rows 2 columns. first row contains c(1,1) (take account prior ages), second line contains c(0,1) (sample 2, named samp2 supposed older sample 1, named samp1) third line contains c(0,0) (sample 2, named samp2 younger sample 1, named samp1). can also fill matrix stratigraphic relations follow:","code":"SC <- SCMatrix(Nb_sample = 2,                SampleNames = c(\"samp1\", \"samp2\")) SC <- matrix(   data = c(1, 1, 0, 1, 0, 0),   ncol = 2,   nrow = (2 + 1),   byrow = T )"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"age-computation-1","dir":"Articles","previous_headings":"Age analysis of various samples > Age analysis with stratigraphic constraints","what":"Age computation","title":"BayLum: An Introduction","text":"plot chunk unnamed-chunk-23 plot chunk unnamed-chunk-23 plot chunk unnamed-chunk-23 Thee results can also used alternative graphical representation: plot chunk unnamed-chunk-24","code":"Age <-   AgeS_Computation(     DATA = DATA3,     Nb_sample = 2,     SampleNames = c(\"samp1\", \"samp2\"),     PriorAge = priorage,     distribution = \"cauchy\",     LIN_fit = TRUE,     Origin_fit = FALSE,     StratiConstraints = SC,     Iter = 1000,      jags_method = 'rjags') Warning: No initial values were provided - JAGS will use the same initial values for all chains Compiling rjags model... Calling the simulation using the rjags method... Adapting the model for 1000 iterations... Running the model for 5000 iterations... Simulation complete Calculating summary statistics... Calculating the Gelman-Rubin statistic for 6 variables.... Finished running the simulation >> Results of the Gelman and Rubin criterion of convergence << ----------------------------------------------  Sample name:  samp1  ---------------------          Point estimate Uppers confidence interval A_samp1      1.003       1.005  D_samp1      1       1.002  sD_samp1     1.003       1.009  ----------------------------------------------  Sample name:  samp2  ---------------------          Point estimate Uppers confidence interval A_samp2      1.004       1.008  D_samp2      1.005       1.017  sD_samp2     1.002       1.01    ---------------------------------------------------------------------------------------------------  *** WARNING: The following information are only valid if the MCMC chains have converged  *** ---------------------------------------------------------------------------------------------------    >> Bayes estimates of Age, Palaeodose and its dispersion for each sample and credible interval << ----------------------------------------------  Sample name:  samp1  --------------------- Parameter    Bayes estimate       Credible interval   A_samp1     9.711                           lower bound     upper bound                  at level 95%    9.126       10                   at level 68%    9.677       10   Parameter    Bayes estimate       Credible interval   D_samp1     29.26                           lower bound     upper bound                  at level 95%    23.914          34.493                   at level 68%    26.756          32.052   Parameter    Bayes estimate       Credible interval  sD_samp1     67.869                           lower bound     upper bound                  at level 95%    51.164          84.839                   at level 68%    57.714          74.182  ----------------------------------------------  Sample name:  samp2  --------------------- Parameter    Bayes estimate       Credible interval   A_samp2     10.413                           lower bound     upper bound                  at level 95%    10          11.236                   at level 68%    10          10.469   Parameter    Bayes estimate       Credible interval   D_samp2     18.343                           lower bound     upper bound                  at level 95%    17.089          19.48                   at level 68%    17.62       18.846   Parameter    Bayes estimate       Credible interval  sD_samp2     4.619                           lower bound     upper bound                  at level 95%    3.588       5.669                   at level 68%    4.003       5.09   ---------------------------------------------- plot_Ages(Age, plot_mode = \"density\") SAMPLE    AGE HPD68.MIN HPD68.MAX HPD95.MIN HPD95.MAX ALT_SAMPLE_NAME AT 1  samp1  9.711     9.677    10.000     9.126    10.000              NA  2 2  samp2 10.413    10.000    10.469    10.000    11.236              NA  1"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"when-mcmc-trajectories-did-not-converge","dir":"Articles","previous_headings":"Age analysis of various samples","what":"When MCMC trajectories did not converge","title":"BayLum: An Introduction","text":"MCMC trajectories converge, means run additional MCMC iterations. AgeS_computation() Age_OSLC14() models can run additional iterations supplying function output back parent function. following, notice using output previous AgeS_computation() example, namely Age. key argument set/change DATA. plot chunk unnamed-chunk-25 plot chunk unnamed-chunk-25 plot chunk unnamed-chunk-25","code":"Age <- AgeS_Computation(   DATA = Age,   Nb_sample = 2,   SampleNames = c(\"GDB5\", \"GDB3\"),   PriorAge = priorage,   distribution = \"cauchy\",   LIN_fit = TRUE,   Origin_fit = FALSE,   Iter = 1000,    jags_method = \"rjags\" ) Calling the simulation using the rjags method... Note: the model did not require adaptation Burning in the model for 4000 iterations... Running the model for 5000 iterations... Simulation complete Calculating summary statistics... Calculating the Gelman-Rubin statistic for 6 variables.... Finished running the simulation >> Results of the Gelman and Rubin criterion of convergence << ----------------------------------------------  Sample name:  GDB5  ---------------------          Point estimate Uppers confidence interval A_GDB5   1       1  D_GDB5   1.001       1.004  sD_GDB5      1.001       1.005  ----------------------------------------------  Sample name:  GDB3  ---------------------          Point estimate Uppers confidence interval A_GDB3   1.008       1.012  D_GDB3   1.009       1.031  sD_GDB3      1.007       1.026    ---------------------------------------------------------------------------------------------------  *** WARNING: The following information are only valid if the MCMC chains have converged  *** ---------------------------------------------------------------------------------------------------    >> Bayes estimates of Age, Palaeodose and its dispersion for each sample and credible interval << ----------------------------------------------  Sample name:  GDB5  --------------------- Parameter    Bayes estimate       Credible interval   A_GDB5      9.724                           lower bound     upper bound                  at level 95%    9.154       10                   at level 68%    9.687       10   Parameter    Bayes estimate       Credible interval   D_GDB5      29.372                           lower bound     upper bound                  at level 95%    23.658          34.505                   at level 68%    26.635          32.055   Parameter    Bayes estimate       Credible interval  sD_GDB5      67.561                           lower bound     upper bound                  at level 95%    50.632          84.409                   at level 68%    59.654          76.278  ----------------------------------------------  Sample name:  GDB3  --------------------- Parameter    Bayes estimate       Credible interval   A_GDB3      10.406                           lower bound     upper bound                  at level 95%    10          11.176                   at level 68%    10          10.468   Parameter    Bayes estimate       Credible interval   D_GDB3      18.29                           lower bound     upper bound                  at level 95%    17.184          19.532                   at level 68%    17.675          18.837   Parameter    Bayes estimate       Credible interval  sD_GDB3      4.557                           lower bound     upper bound                  at level 95%    3.526       5.591                   at level 68%    3.975       5.059   ----------------------------------------------"},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"BayLum: An Introduction","text":"Combès, B., Philippe, ., Lanos, P., Mercier, N., Tribolo, C., Guerin, G., Guibert, P., Lahaye, C., 2015. Bayesian central equivalent dose model optically stimulated luminescence dating. Quaternary Geochronology 28, 62-70. doi: 10.1016/j.quageo.2015.04.001 Combès, B., Philippe, ., 2017. Bayesian analysis individual systematic multiplicative errors estimating ages stratigraphic constraints optically stimulated luminescence dating. Quaternary Geochronology 39, 24–34. doi: 10.1016/j.quageo.2017.02.003 Philippe, ., Guérin, G., Kreutzer, S., 2019. BayLum - R package Bayesian analysis OSL ages: introduction. Quaternary Geochronology 49, 16-24. doi: 10.1016/j.quageo.2018.05.009","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"for-more-details-on-the-diagnostic-of-markov-chains","dir":"Articles","previous_headings":"References > Further reading","what":"For more details on the diagnostic of Markov chains","title":"BayLum: An Introduction","text":"Robert Casella, 2009. Introducing Monte Carlo Methods R. Springer Science & Business Media.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/BayLum.html","id":"for-details-on-the-here-used-dataset","dir":"Articles","previous_headings":"References > Further reading","what":"For details on the here used dataset","title":"BayLum: An Introduction","text":"Tribolo, C., Asrat, ., Bahain, J. J., Chapon, C., Douville, E., Fragnol, C., Hernandez, M., Hovers, E., Leplongeon, ., Martin, L., Pleurdeau, D., Pearson, O., Puaud, S., Assefa, Z., 2017. Across Gap: Geochronological Sedimentological Analyses Late Pleistocene-Holocene Sequence Goda Buticha, Southeastern Ethiopia. PloS one, 12(1), e0169418. doi: 10.1371/journal.pone.0169418","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"background-and-scope","dir":"Articles","previous_headings":"","what":"Background and scope","title":"BayLum: Specification of the YAML config file","text":"earlier versions 'BayLum' measurement data settings prepared using multiple folder structure comprising various CVS BIN/BINX files particular way. concept proved error-prone left lot frustrated 'BayLum' users behind, sometimes spent hours trying understand unclear error messages realising typo one CSV files, folder structure precisely 'BayLum' expected found. switching single-configuration file users options settings cleaner less scatters different files numerous subfolders. parameter naming follows naming convention used “old” 'BayLum' CSV-files. purpose document specification description YAML (file ending *.yml) configuration file used function create_DataFile() provide data input settings 'BayLum' modelling. YAML file alternative future replacement previous folder structure various CSV files required functions Generate_DataFile() Generate_DateFile_MG().","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"key-concepts","dir":"Articles","previous_headings":"","what":"Key concepts","title":"BayLum: Specification of the YAML config file","text":"configuration file uses YAML format, uses indention nest different parameters. Please see cited documentation details, 'BayLum' following features stick : single configuration file needed path file hard drive matter Measurement data can stored wherever like , although makes sense pool one folder analysis One sample one record YAML file. data one sample scattered different measurement files (e.g., BIN/BINX), one sample still one record.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"a-single-sample-entry","dir":"Articles","previous_headings":"Examples and detailed specifications","what":"A single sample entry","title":"BayLum: Specification of the YAML config file","text":"single sample entry appears follows: new record (aka sample) starts - indention shown . Furthermore: Indention rules need followed strictly record three levels: top level, settings level, rules level nesting needs kept parameters shown examples allowed, list parameters need complete (.e. just remove parameter) Sample names need unique , keep simple rules mind, easy time preparing 'BayLum' analysis.","code":"- sample: \"samp1\"   files:      - \"/yourhardrive/yourfolder/sample_one.binx\"   settings:     dose_points: null     dose_source: { value: 0.1535, error: 0.00005891 }     dose_env: { value: 2.512, error: 0.05626 }     rules:         beginSignal: 6         endSignal: 8         beginBackground: 50         endBackground: 55         beginTest: 6         endTest: 8         beginTestBackground: 50         endTestBackground: 55         inflatePercent: 0.027         nbOfLastCycleToRemove: 1"},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"multiple-records","dir":"Articles","previous_headings":"Examples and detailed specifications","what":"Multiple records","title":"BayLum: Specification of the YAML config file","text":"single record makes easy case, probably one sample thrown modelling. Although number records limited, keep simple ; two records entry (dots replace entries shown ): can see example, can also add comments records, start #. two records also show different entries argument files. first case, file path given, record number two, files set null. options possible. first case, record specifies measurement data can found. second case assumed R object name samp2 can found global environment R session.","code":"# this is a coment for sample number one - sample: \"samp1\"   files:      - \"/yourhardrive/yourfolder/sample_one.binx\"   settings:     dose_points: null     dose_source: { value: 0.1535, error: 0.00005891 }     dose_env: { value: 2.512, error: 0.05626 }     rules:         beginSignal: 6         .         .         .         nbOfLastCycleToRemove: 1 # this is a coment for sample number two - sample: \"samp2\"   files: null   settings:     dose_points: null     dose_source: { value: 0.1535, error: 0.00005891 }     dose_env: { value: 2.512, error: 0.05626 }     rules:         beginSignal: 6         .         .         .         nbOfLastCycleToRemove: 1"},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"top-level-sample-files","dir":"Articles","previous_headings":"Examples and detailed specifications > Paramter specifcation","what":"Top level (sample, files)","title":"BayLum: Specification of the YAML config file","text":"top level two parameters:","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"sample","dir":"Articles","previous_headings":"Examples and detailed specifications > Paramter specifcation > Top level (sample, files)","what":"sample","title":"BayLum: Specification of the YAML config file","text":"parameter specifies name sample. name must unique ideally free non-ASCII characters white space.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"files","dir":"Articles","previous_headings":"Examples and detailed specifications > Paramter specifcation > Top level (sample, files)","what":"files","title":"BayLum: Specification of the YAML config file","text":"parameter can null (files parameter can set null) followed set - path measurement file given quotes. number entries files limited. Example: entry null, function BayLum::create_DataFile() uses settings YAML file assume R objects name specified sample available global session environment. instance, files imported treated Luminescence::read_BIN2R(...) |> subset(...) similar. Setting files null gives options pre-process measurement data recommended mode operation. files comes file path entries, BayLum::create_DataFile() try import files using appropriate import functions. convenient, however, except minimal filtering (e.g., removing non-OSL non-IRSL curves), measurement data remain untreated, BayLum::create_DataFile() expects data complete (e.g., identical number curves), without error strictly follow SAR structure.","code":"files:      - \"/yourhardrive/yourfolder/sample_one_a.binx\"     - \"/yourhardrive/yourfolder/sample_one_b.binx\""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"settings-level","dir":"Articles","previous_headings":"Examples and detailed specifications > Paramter specifcation","what":"settings level","title":"BayLum: Specification of the YAML config file","text":"settings level allows specify dose rate source used irradiation Gy/s (dose_source) environmental dose rate Gy/ka (dose_env). value needs provided uncertainty, shown example: Additionally, can set specify regeneration dose points (s). default null, irradiation times automatically extracted data create_DataFile(). However, information might missing , likely, wrong cumbersome fix numbers manually measurement data. Therefore dose points can provided config file: example corresponds 5 (five) regeneration dose points 10 s, 20 s, …, 10 s. Note add values specified measurement sequence, except natural dose point (0 s) test dose points, must added. provided vector shortened automatically fit actual number dose points. error thrown provide enough dose points","code":"settings:     dose_points: null     dose_source: { value: 0.1535, error: 0.00005891 }     dose_env: { value: 2.512, error: 0.05626 } settings:     dose_points: [10, 20, 50, 0, 10]     dose_source: { value: 0.1535, error: 0.00005891 }     dose_env: { value: 2.512, error: 0.05626 }"},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"rules-level","dir":"Articles","previous_headings":"Examples and detailed specifications > Paramter specifcation","what":"rules level","title":"BayLum: Specification of the YAML config file","text":"rules level enables provide couple parameters, used Bayesian modelling. Example: Please ensure set values correspond measurement data. instance, OSL curve 100 channels (data points), make sense set larger integral settings (e.g., 1000), setting lead error. Integral values (LxL_x) (TxT_x) usually set identical values unless good reasons use different integral settings.","code":"rules:         beginSignal: 6         endSignal: 8         beginBackground: 50         endBackground: 55         beginTest: 6         endTest: 8         beginTestBackground: 50         endTestBackground: 55         inflatePercent: 0.027         nbOfLastCycleToRemove: 1"},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"auto-generate-the-config-file-using-write_yamlconfigfile","dir":"Articles","previous_headings":"Examples and detailed specifications","what":"Auto-generate the config file using write_YAMLConfigFile()","title":"BayLum: Specification of the YAML config file","text":"ease generation configuration files many samples, can use function write_YAMLConfigFile(). function two different operation modes, shown . Important note function seem function parameters, parameters extracted reference file within package. parameters reference file allowed. However, can preset parameter records, except parameter sample. length parameter (e.g., write_YAMLConfigFile(sample = c(\"a1\", \"a2))) determines number records configuration file output.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"show-available-parameters","dir":"Articles","previous_headings":"Examples and detailed specifications > Auto-generate the config file using write_YAMLConfigFile()","what":"Show available parameters","title":"BayLum: Specification of the YAML config file","text":"mode, function displays available parameters terminal returns list can modified R passed create_DataFile():","code":"l <- write_YAMLConfigFile() ── Allowed function parameters (start) ───────────────────────────────────────── sample files settings.dose_points settings.dose_source.value settings.dose_source.error settings.dose_env.value settings.dose_env.error settings.rules.beginSignal settings.rules.endSignal settings.rules.beginBackground settings.rules.endBackground settings.rules.beginTest settings.rules.endTest settings.rules.beginTestBackground settings.rules.endTestBackground settings.rules.inflatePercent settings.rules.nbOfLastCycleToRemove ── Allowed function parameters (end) ─────────────────────────────────────────── str(l) List of 1  $ :List of 3   ..$ sample  : chr \"reference\"   ..$ files   : NULL   ..$ settings:List of 4   .. ..$ dose_points: NULL   .. ..$ dose_source:List of 2   .. .. ..$ value: int 0   .. .. ..$ error: int 0   .. ..$ dose_env   :List of 2   .. .. ..$ value: int 0   .. .. ..$ error: int 0   .. ..$ rules      :List of 10   .. .. ..$ beginSignal          : int 0   .. .. ..$ endSignal            : int 0   .. .. ..$ beginBackground      : int 0   .. .. ..$ endBackground        : int 0   .. .. ..$ beginTest            : int 0   .. .. ..$ endTest              : int 0   .. .. ..$ beginTestBackground  : int 0   .. .. ..$ endTestBackground    : int 0   .. .. ..$ inflatePercent       : int 0   .. .. ..$ nbOfLastCycleToRemove: int 0"},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"write-yaml-file","dir":"Articles","previous_headings":"Examples and detailed specifications > Auto-generate the config file using write_YAMLConfigFile()","what":"Write YAML file","title":"BayLum: Specification of the YAML config file","text":"Alternatively, function can used generate config file preset values. can modify generated YAML file text-editor.","code":"l <- write_YAMLConfigFile(output_file = \"<your filepath>\")"},{"path":"https://crp2a.github.io/BayLum/dev/articles/ConfigFile_Specification.html","id":"internals","dir":"Articles","previous_headings":"Examples and detailed specifications","what":"Internals","title":"BayLum: Specification of the YAML config file","text":"YAML settings file loaded processed function BayLum::create_DataFile() using yaml::read_yaml() R package 'yaml'. yaml::read_yaml() returns list R, processed BayLum::create_DataFile(). Sometimes makes sense modify settings fly R. avoid import export YAML files, BayLum::create_DataFile() always tries process input parameter BayLum::create_DataFile(config_file, ...) list trying load YAML file hard drive. option usually unnecessary, information may help complex R scripts.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Claire Christophe. Author. Anne Philippe. Author, maintainer. Sebastian Kreutzer. Author. Guillaume Guérin. Author. Frederik Harly Baumgarten. Author. Nicolas Frerebeau. Author. . Copyright holder, funder. . Funder. . Funder.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Christophe C, Philippe , Kreutzer S, Guérin G, Baumgarten F, Frerebeau N (2024). BayLum: Chronological Bayesian Models Integrating Optically Stimulated Luminescence Radiocarbon Age Dating. R package version 0.3.3.9000-13, https://crp2a.github.io/BayLum/, https://CRAN.r-project.org/package=BayLum. Philippe , Guerin G, Kreutzer S (2019). “BayLum - R package Bayesian analysis OSL ages: introduction.” Quaternary Geochronology, 49, 16-24. doi:10.1016/j.quageo.2018.05.009.","code":"@Manual{,   title = {BayLum: Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating},   author = {Claire Christophe and Anne Philippe and Sebastian Kreutzer and Guillaume Guérin and Frederik Harly Baumgarten and Nicolas Frerebeau},   year = {2024},   note = {R package version 0.3.3.9000-13, https://crp2a.github.io/BayLum/},   url = {https://CRAN.r-project.org/package=BayLum}, } @Article{,   title = {BayLum - An R package for Bayesian analysis of OSL ages: An introduction},   author = {Anne Philippe and Guillaume Guerin and Sebastian Kreutzer},   year = {2019},   journal = {Quaternary Geochronology},   volume = {49},   pages = {16-24},   doi = {10.1016/j.quageo.2018.05.009}, }"},{"path":"https://crp2a.github.io/BayLum/dev/index.html","id":"baylum-","dir":"","previous_headings":"","what":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating","text":"R package chronological Bayesian models integrated Optically Stimulated (OSL) Luminescence Dating","code":"To cite the R package 'BayLum' please cite the R package itself and the following article:    Christophe C, Philippe A, Kreutzer S, Guérin G, Baumgarten F,   Frerebeau N (2024). _BayLum: Chronological Bayesian Models   Integrating Optically Stimulated Luminescence and Radiocarbon Age   Dating_. R package version 0.3.2,   <https://CRAN.R-project.org/package=BayLum>.    Philippe A, Guerin G, Kreutzer S (2019). \"BayLum - An R package for   Bayesian analysis of OSL ages: An introduction.\" _Quaternary   Geochronology_, *49*, 16-24. doi:10.1016/j.quageo.2018.05.009   <https://doi.org/10.1016/j.quageo.2018.05.009>."},{"path":"https://crp2a.github.io/BayLum/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating","text":"need JAGS installed computer. can install released version BayLum CRAN : development version GitHub : Please note development versions may change day day.","code":"install.packages(\"BayLum\") # install.packages(\"remotes\") remotes::install_github(\"crp2a/BayLum\")"},{"path":"https://crp2a.github.io/BayLum/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating","text":"program free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and Radiocarbon Age Dating","text":"development BayLum received state financial support managed Agence Nationale de la Recherche (France) program Investissements d’avenir (ref. ANR-10-LABX-52) 2015 2018.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"function calibrates C-14 age samples get age (ka). user can choose one following radiocarbon calibration curve: Northern Southern Hemisphere marine atmospheric. must curve samples.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"","code":"AgeC14_Computation(   Data_C14Cal,   Data_SigmaC14Cal,   SampleNames,   Nb_sample,   PriorAge = rep(c(10, 50), Nb_sample),   SavePdf = FALSE,   OutputFileName = c(\"MCMCplot\", \"HPD_CalC-14Curve\", \"summary\"),   OutputFilePath = c(\"\"),   SaveEstimates = FALSE,   OutputTableName = c(\"DATA\"),   OutputTablePath = c(\"\"),   StratiConstraints = c(),   sepSC = c(\",\"),   Model = c(\"full\"),   CalibrationCurve = c(\"IntCal20\"),   Iter = 50000,   t = 5,   n.chains = 3,   quiet = FALSE,   roundingOfValue = 3 )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"Data_C14Cal numeric (required): corresponding C-14 age estimate. Data_SigmaC14Cal numeric (required): corresponding error C-14 age estimates. SampleNames character (required): names sample. length vector equal Nb_sample. Nb_sample integer: number samples. PriorAge numeric (default): lower upper bounds age parameter sample years (ka). Note , length(PriorAge) == 2 * Nb_sample PriorAge[2i-1,2i] corresponds lower upper bounds sample whose number ID equal . SavePdf logical (default): TRUE save graphs pdf file named OutputFileName folder OutputFilePath. OutputFileName character (default): name pdf file generated function SavePd=TRUE, length(OutputFileName) = =3, see PLOT OUTPUT Value section informations. OutputFilePath character (default): path pdf file generated function SavePdf=TRUE. equal \"\", must terminated \"/\". SaveEstimates logical (default): TRUE save Bayes' estimates, credible interval level 68% 95% result Gelman Rubin test convergence, csv table named OutputFileName folder OutputFilePath. OutputTableName logical (default): name table generated function SaveEstimates=TRUE. OutputTablePath character (default): path table generated function SaveEstimates=TRUE. equal \"\", must terminated \"/\". StratiConstraints numeric matrix character(default): input object stratigraphic relation samples. stratigraphic relation samples see details section instructions regarding correctly fill StratiConstraints; user can refer matrix (numeric matrix) csv file (character). stratigraphic relation default value suitable. sepSC character (default): StratiConstraints character, indicate column separator StratiConstraints csv file. Model character (default): \"full\", error estimate calibration curve taken account. \"naive\" error taken account age estimate. CalibrationCurve character (default): calibration curve chosen. Allowed inputs \"Intcal13\" \"Intcal13\" Northern Hemisphere atmospheric radiocarbon calibration curve, \"Marine13\" \"Marine13\" Marine radiocarbon calibration curve, \"SHCal13\" \"SHCal20\" Southern Hemisphere atmospheric radiocarbon calibration curve csv file, tree columns, first column dedicated \"Cal.BP\", second \"XC-14.age\", third \"Error\". decimal file must dot, separator must comma. Iter integer (default): number iterations MCMC computation (information see rjags::jags.model). t integer (default): 1 every t iterations MCMC considered sampling posterior distribution (information see rjags::jags.model. n.chains integer (default): number independent chains model (information see rjags::jags.model. quiet logical (default): enables/disables rjags::rjags-package messages roundingOfValue integer (default):  Integer indicating number decimal places used, default set 3.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"NUMERICAL OUTPUT list containing following objects: Sampling: corresponds sample posterior distributions age parameters; Outlier: stating names samples considered outliers; Model: stating model chosen (\"full\" \"naive\"); CalibrationCurve: stating radiocarbon calibration curve chosen; PriorAge: stating priors used age parameter; StratiConstraints: stating stratigraphic relations samples considered model. Gelman Rubin test convergency: print result Gelman Rubin test convergence age estimate sample. result close one expected. addition, user must visually assess convergence trajectories looking graph generated function (see PLOT OUTPUT informations). convergences (Gelman Rubin test plot checking) satisfactory, user can consider estimates valid. Otherwise, user may try increasing number MCMC iterations (Iter) precise possible PriorAge parameter reach convergence. Credible intervals Bayes estimates: prints Bayes' estimates, credible intervals 95% 68% age parameters sample. PLOT OUTPUT MCMC trajectories: graph MCMC trajectories posterior distributions age parameter displayed.  line, plot left represents MCMC trajectories, one right posterior distribution parameter. Summary sample age estimates: plot credible intervals Bayes' estimate sample age one graph. give results publication, recommend give Bayes' estimate parameters well credible interval 95% 68%.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"fill StratiConstraints? stratigraphic relations samples, C-14 age Data_C14Cal must ordered order increasing ages. user can fill StratiConstraints matrix follow. Size matrix: row number StratiConstraints matrix equal Nb_sample+1, column number equal Nb_sample. First line matrix: {1,...,Nb_Sample}, StratiConstraints[1,]=1 means lower bound sample age (given PriorAge[2i-1]) sample whose number ID equal , taken account. Sample relations:  j {2,...,Nb_Sample+1} {j,...,Nb_Sample}, StratiConstraints[j,]=1 sample age whose number ID equal j-1 lower sample age whose number ID equal . Otherwise, StratiConstraints[j,]=0. Note StratiConstraints_{2:Nb_sample+1,1:Nb_sample} upper triangular matrix. user can also use SCMatrix SC_Ordered (samples ordered) functions construct StratiConstraints matrix. user can also refer .csv file contains relation samples defined . user must take care separator used csv file using argument sepSC. ** precision Model ** propose two models \"full\" \"naive\". Model = 'full' means measurement error error calibration curve taken account Bayesian model; Model = \"naive\" means error measurement taken account mode. precisely, model considered , one developed Christen, JA (1994), assume multiplicative effect errors address problem outliers. addition, penalise variables outliers damage estimation, introduce structure mixture, means variable considered outlier addition multiplicative error.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"Please note initial values MCMC currently chains since rely automatic initial value generation JAGS. optimal changed future. However, affect quality age estimates chains converged.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"Christophe, C., Philippe, ., Guérin, G., Kreutzer, S., 2024. AgeC14_Computation(): Bayesian analysis C-14 age estimations various samples. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"Christen, JA (1994). Summarizing set radiocarbon determinations: robust approach. Applied Statistics, 489-503. Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B, Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887. Hogg AG, Hua Q, Blackwell PG, Niu M, Buck CE, Guilderson TP, Heaton TJ, Palmer JG, Reimer PJ, Reimer RW, Turney CSM, Zimmerman SRH. 2013. SHCal13 Southern Hemisphere calibration, 0-50000 years cal. BP Radiocarbon 55(4):1889-1903","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"Claire Christophe, Anne Philippe, Guillaume Guérin, Sebastian Kreutzer","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeC14_Computation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian analysis for C-14 age estimations of various samples — AgeC14_Computation","text":"","code":"## Load data data(DATA_C14,envir = environment()) C14Cal <- DATA_C14$C14[,1] SigmaC14Cal <- DATA_C14$C14[,2] Names <- DATA_C14$Names nb_sample <- length(Names)  ## Age computation of samples without stratigraphic relations Age <- AgeC14_Computation(  Data_C14Cal = C14Cal,  Data_SigmaC14Cal = SigmaC14Cal,  SampleNames = Names,  Nb_sample = nb_sample,  PriorAge = rep(c(20,60),nb_sample),  Iter = 500,  quiet = TRUE,  roundingOfValue = 3) #> Warning: [plot_MCMC()] 'n.iter' out of range, reset to number of observations     #>  #>  #> >> MCMC Convergence of Age parameters << #> ---------------------------------------------- #> Sample name   Bayes estimate   Uppers credible interval #> A_S-EVA-26510 \t 1 \t\t 1.001  #> A_S-EVA-26506 \t 1.009 \t\t 1.01  #> A_S-EVA-26507 \t 0.997 \t\t 0.998  #> A_S-EVA-26508 \t 1.022 \t\t 1.05  #>  #>  #> --------------------------------------------------------------------------------------------------- #>  *** WARNING: The following information are only valid if the MCMC chains have converged  *** #> --------------------------------------------------------------------------------------------------- #>  #>  #>  #> >> Bayes estimates of Age for each sample and credible interval << #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26510 \t 41.9633191107933  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 41.508 \t\t 42.365  #> \t\t\t\t at level 68% \t 41.868 \t\t 42.245  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26506 \t 45.7291043411085  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 45.052 \t\t 46.263  #> \t\t\t\t at level 68% \t 45.437 \t\t 45.976  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26507 \t 44.8276411934547  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 43.842 \t\t 45.878  #> \t\t\t\t at level 68% \t 44.33 \t\t 45.269  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26508 \t 45.0467867269425  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 44.012 \t\t 45.976  #> \t\t\t\t at level 68% \t 44.645 \t\t 45.434  #>  #> ------------------------------------------------------"},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS.html","id":null,"dir":"Reference","previous_headings":"","what":"Output of AgeS_Computation function for the samples: ","title":"Output of AgeS_Computation function for the samples: ","text":"Output AgeS_Computation function samples: \"GDB5\" \"GDB3\", stratigraphic relation neither systematic errors.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output of AgeS_Computation function for the samples: ","text":"","code":"data(\"AgeS\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Output of AgeS_Computation function for the samples: ","text":"list containing Sampling MCMC.list corresponds sample posterior distributions ages (ka), palaeodoses (Gy) equivalent dose dispersions (Gy) parameters samples \"GDB5\" \"GDB3\"; Model_GrowthCurve stating dose response fitting option chosen run function Distribution stating distribution chosen model dispersion individual equivalent dose values around palaeodose sample; PriorAge stating priors used age parameter (ka); StratiConstraints stating matrix stratigraphic relations samples considered model; CovarianceMatrix stating covariance matrix error used model, highlighting  common errors samples cases (diagonal matrix).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Output of AgeS_Computation function for the samples: ","text":"Tribolo, C., Asrat, ., Bahain, J. J., Chapon, C., Douville, E., Fragnol, C., Hernandez, M., Hovers, E., Leplongeon, .,  Martin, L,  Pleurdeau, D,  Pearson, O ,  Puaud, S,  Assefa, Z. (2017). Across Gap: Geochronological Sedimentological Analyses Late Pleistocene-Holocene Sequence Goda Buticha, Southeastern Ethiopia. PloS one, 12(1), e0169418.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output of AgeS_Computation function for the samples: ","text":"","code":"data(AgeS) str(AgeS) #> List of 6 #>  $ Sampling         :List of 3 #>   ..$ : 'mcmc' num [1:2000, 1:6] 6.39 6.17 8.38 7.91 7.47 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:6] \"A[1]\" \"A[2]\" \"D[1]\" \"D[2]\" ... #>   .. ..- attr(*, \"mcpar\")= num [1:3] 20005 30000 5 #>   ..$ : 'mcmc' num [1:2000, 1:6] 6.54 6.84 6.81 6.53 6.84 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:6] \"A[1]\" \"A[2]\" \"D[1]\" \"D[2]\" ... #>   .. ..- attr(*, \"mcpar\")= num [1:3] 20005 30000 5 #>   ..$ : 'mcmc' num [1:2000, 1:6] 7.31 8.47 6.95 7.37 6.26 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:6] \"A[1]\" \"A[2]\" \"D[1]\" \"D[2]\" ... #>   .. ..- attr(*, \"mcpar\")= num [1:3] 20005 30000 5 #>   ..- attr(*, \"class\")= chr \"mcmc.list\" #>  $ Model_GrowthCurve: chr \"AgesMultiCS2_EXPLIN\" #>  $ Distribution     : chr \"cauchy\" #>  $ PriorAge         : num [1:4] 1 100 1 100 #>  $ StratiConstraints: num [1:3, 1:2] 1 0 0 1 0 0 #>  $ CovarianceMatrix : num [1:2, 1:2] 0.0566 0 0 0.062"},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"function computes age (ka) least two samples according model developed Combès Philippe (2017), based outputs Generate_DataFile Generate_DataFile_MG using combine_DataFiles. Samples, data available several BIN files, can analysed. Single-grain Multi-grain OSL measurements can analysed simultaneously.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"","code":"AgeS_Computation(   DATA,   SampleNames = DATA$SampleNames,   Nb_sample = DATA$Nb_sample,   PriorAge = rep(c(0.01, 100), Nb_sample),   BinPerSample = rep(1, Nb_sample),   SavePdf = FALSE,   OutputFileName = c(\"MCMCplot\", \"summary\"),   OutputFilePath = c(\"\"),   SaveEstimates = FALSE,   OutputTableName = c(\"DATA\"),   OutputTablePath = c(\"\"),   THETA = c(),   sepTHETA = c(\",\"),   StratiConstraints = c(),   sepSC = c(\",\"),   LIN_fit = TRUE,   Origin_fit = FALSE,   distribution = c(\"cauchy\"),   model = NULL,   Iter = 10000,   burnin = 4000,   adapt = 1000,   t = 5,   n.chains = 3,   jags_method = \"rjags\",   autorun = FALSE,   quiet = FALSE,   roundingOfValue = 3,   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"DATA (required) Two inputs possible: (1): DATA list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J, K, Nb_measurement, provided function Generate_DataFile, Generate_DataFile_MG combine_DataFiles. DATA contains informations one sample. stratigraphic relations samples, informations DATA must ordered order increasing ages. See details section informations. (2): object class BayLum.list provided output AgeS_Computation. input class BayLum.list identified, new JAGS model created. Instead, JAGS model specified AgeS_Computation output extended. Useful convergence originally achieved complete restart desirable. SampleNames character vector: names samples. length vector equal Nb_sample. Nb_sample integer: number samples, Nb_sample>1. PriorAge numeric vector (default): lower upper bounds age parameter sample (ka). Note , length(PriorAge)=2*Nb_sample PriorAge[2i-1,2i] corresponds lower upper bounds sample whose number ID equal . BinPerSample integer vector (default): vector number BIN files per sample. length vector equal Nb_sample. BinPerSample[] corresponds number BIN files sample whose number ID equal . information fill vector, refer details Generate_DataFile Generate_DataFile_MG. SavePdf logical (default): TRUE save graphs pdf file named OutputFileName folder OutputFilePath. OutputFileName character (default): name pdf file generated function SavePdf = TRUE; length(OutputFileName)=2, see PLOT OUTPUT Value section informations. OutputFilePath character (default): path pdf file generated function SavePdf=TRUE. equal \"\", must terminated \"/\". SaveEstimates logical (default): TRUE save Bayes' estimates, credible interval level 68% 95%  result Gelman en Rubin test convergence, csv table named OutputFileName folder OutputFilePath. OutputTableName character (default): name table generated function SaveEstimates = TRUE. OutputTablePath character (default): path table generated function SaveEstimates = TRUE. equal \"\", must terminated \"/\". THETA numeric matrix character (default): input object systematic individual error. systematic errors considered, see details section instructions regarding correctly fill THETA; user can refer matrix (numeric matrix) csv file (character). Otherwise, default value suitable, individual errors considered. sepTHETA character (default): THETA character, indicate column separator THETA CSV-file. StratiConstraints numeric matrix character(default): input object stratigraphic relation samples. stratigraphic relation samples see details section instructions regarding correctly fill StratiConstraints; user can refer matrix (numeric matrix) csv file (character). stratigraphic relation default value suitable. sepSC character (default): StratiConstraints character, indicate column separator StratiConstraints .csv file. LIN_fit logical (default): TRUE (default) allows linear component, top (default) saturating exponential curve, fitting dose response curves. See details section informations proposed dose response curves. Origin_fit logical (default): TRUE, forces dose response curves pass origin. See details section informations proposed growth curves. distribution character (default): type distribution defines individual equivalent dose values distributed around palaeodose. Allowed inputs \"cauchy\", \"gaussian\", \"lognormal_A\" \"lognormal_M\", see details section informations. model character (optional): allows provide custom model function text string. Please note option chosen parameter distribution ignored safety net applied. function crashes user. Iter integer (default): number iterations run used assess convergence ages (see runjags::run.jags). burnin integer (default): number iterations used \"home \" stationary posterior distribution. used assessing convergence (see runjags::run.jags). adapt integer (default): number iterations used adaptive phase simulation (see runjags::run.jags). t integer (default): 1 every t iterations MCMC considered sampling posterior distribution. (information see runjags::run.jags). n.chains integer (default): number independent chains model (information see runjags::run.jags). jags_method character (default): select method use order call JAGS. jags_methods \"rjags\" (default) \"rjparallel\" tested. (information possibilities others, see runjags::run.jags) autorun logical (default): choose automate JAGS processing. JAGS model automatically extended convergence reached (information see runjags::autorun.jags). quiet logical (default): enables/disables rjags messages roundingOfValue integer (default):  Integer indicating number decimal places used, default = 3. ... arguments can passed control Bayesian process. 1) creating new JAGS model, see details supported arguments. 2) extending JAGS model see arguments runjags::extend.JAGS.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"NUMERICAL OUTPUT list type BayLum.list containing following objects: Sampling: corresponds sample posterior distributions age (ka), palaeodose (Gy) equivalent dose dispersion (Gy) parameters sample; Model_GrowthCurve: stating dose response fitting option chosen; Distribution: stating distribution chosen model dispersion individual equivalent dose values around palaeodose sample; PriorAge: stating priors used age parameter (ka); StratiConstraints: stating stratigraphic relations samples considered model; CovarianceMatrix: stating covariance matrix error used model, highlighting common errors samples . model: returns model used Bayesian modelling character JAGS model output: returns JAGS model class \"runjags\". Gelman Rubin test convergency: prints result Gelman Rubin test convergence age, palaeodose equivalent dose dispersion parameters sample. result close one expected. addition, user must visually assess convergence trajectories looking graph generated function (see PLOT OUTPUT informations). convergences (Gelman Rubin test plot checking) satisfactory, user can consider estimates valid. Otherwise, user may try increasing number MCMC iterations (Iter) precise PriorAge parameter (example specify young sample c(0.01,10) old sample c(10,100)), changing parameter distribution growth curve, reach convergence. Credible intervals Bayes estimates: prints Bayes estimates, credible intervals 95% 68% age, palaeodose equivalent dose dispersion parameters sample. PLOT OUTPUT MCMC trajectories: graph MCMC trajectories posterior distributions age, palaeodose equivalent dose dispersion parameters displayed, one page per sample.  first line figure corresponds age parameter, second palaeodose parameter third equivalent dose dispersion parameter. line, plot left represents MCMC trajectories, one right posterior distribution parameter. Summary sample age estimates: plot credible intervals Bayes estimate sample age graph. give results publication, recommend give Bayes' estimate parameters well credible interval 95% 68%.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"Supported ... arguments fill StratiConstraints stratigraphic relations samples, informations DATA must ordered order increasing ages. user can either fill right Names Generate_DataFile Generate_DataFile_MG (indicated Details section function), ordered order increasing ages outputs Generate_DataFile Generate_DataFile_MG combine_DataFiles user can fill StratiConstraints matrix follow. Size matrix: row number StratiConstraints matrix equal Nb_sample+1, column number equal Nb_sample. First line matrix: {1,...,Nb_Sample}, StratiConstraints[1,]=1 means lower bound sample age (given PriorAge[2i-1]) sample whose number ID equal , taken account. Sample relations:  j {2,...,Nb_Sample+1} {j,...,Nb_Sample}, StratiConstraints[j,]=1 sample age whose number ID equal j-1 lower sample age whose number ID equal . Otherwise, StratiConstraints[j,]=0. Note StratiConstraints_{2:Nb_sample+,1:Nb_sample} upper triangular matrix. user can also use SCMatrix SC_Ordered (samples ordered) functions construct StratiConstraints matrix. user can also refer csv file contains relation samples defined . user must take care separator used csv file using argument sepSC. fill THETA covariance matrix concerning common individual error? systematic errors considered, user can fill THETA matrix follows. row number THETA equal column number, equal Nb_sample. {1,...,Nb_sample}, THETA[,] contains individual error plus systematic error sample whose number ID equal . ,j {1,...,Nb_sample} different j , THETA[,j] contains common error samples whose number ID equal j. Note THETA[,j] symetric matrix. user can also refer .csv file contains errors defined . Alternatively can use function create_ThetaMatrix. Option growth curves Age_Computation Palaeodose_Computation, user can choose 4 dose response curves: Saturating exponential plus linear growth (AgesMultiCS2_EXPLIN): x IR+, f(x)=(1-exp(-x/b))+cx+d; select LIN_fit=TRUE Origin_fit=FALSE Saturating exponential growth (AgesMultiCS2_EXP): x IR+, f(x)=(1-exp(-x/b))+d; select LIN_fit=FALSE Origin_fit=FALSE Saturating exponential plus linear growth fitting origin (AgesMultiCS2_EXPLINZO): x IR+, f(x)=(1-exp(-x/b))+cx; select LIN_fit=TRUE Origin_fit=TRUE Saturating exponential growth fitting origin (AgesMultiCS2_EXPZO): x IR+, f(x)=(1-exp(-x/b)); select LIN_fit=FALSE Origin_fit=TRUE Option equivalent dose distribution around palaeodose use can choose : cauchy: Cauchy distribution location parameter equal palaeodose sample; gaussian: Gaussian distribution mean equal palaeodose sample; lognormal_A: log-normal distribution mean Average equal palaeodose sample: lognormal_M: log-normal distribution Median equal palaeodose sample.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"Please note initial values MCMC currently chains since rely automatic initial value generation JAGS. optimal changed future. However, affect quality age estimates chains converged.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"Christophe, C., Philippe, ., Guérin, G., Kreutzer, S., 2024. AgeS_Computation(): Bayesian analysis OSL age estimation various samples. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"Combes, Benoit Philippe, Anne, 2017. Bayesian analysis multiplicative Gaussian error multiple ages estimation optically stimulated luminescence dating. Quaternary Geochronology (39, 24-34) Combes, B., Philippe, ., Lanos, P., Mercier, N., Tribolo, C., Guerin, G., Guibert, P., Lahaye, C., 2015. Bayesian central equivalent dose model optically stimulated luminescence dating. Quaternary Geochronology 28, 62-70. doi:10.1016/j.quageo.2015.04.001","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"Claire Christophe, Anne Philippe, Guillaume Guérin, Sebastian Kreutzer","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/AgeS_Computation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian analysis for OSL age estimation of various samples — AgeS_Computation","text":"","code":"## Age computation of samples GDB5 and GDB3, ## load data data(DATA2) # GD85 data(DATA1) # GD83  ## produce DataFile Data <- combine_DataFiles(DATA2, DATA1)  ## without common error, assuming GDB5 age younger than GDB3 age Nb_sample <- 2 SC <- matrix(   data = c(1,1,0,1,0,0),   ncol = 2,   nrow = (Nb_sample+1),   byrow = TRUE)  if (FALSE) { # \\dontrun{ ## run standard Age <- AgeS_Computation(   DATA = Data,   Nb_sample = Nb_sample,   SampleNames = c(\"GDB5\",\"GDB3\"),   PriorAge = rep(c(1,100), 2),   StratiConstraints = SC,   Iter = 100,   quiet = FALSE,   jags_method = \"rjags\" )  ## extend model Age_extended <- AgeS_Computation(   DATA = Age,   Nb_sample = Nb_sample,   SampleNames = c(\"GDB5\",\"GDB3\"),   PriorAge = rep(c(1,100), 2),   StratiConstraints = SC,   adapt = 0,   burnin = 500,   Iter = 1000,   quiet = FALSE,   jags_method = \"rjags\" )  ## autorun mode Age <- AgeS_Computation(   DATA = Data,   Nb_sample = Nb_sample,   SampleNames = c(\"GDB5\",\"GDB3\"),   PriorAge = rep(c(1,100), 2),   StratiConstraints = SC,   Iter = 10000,   quiet = FALSE,   jags_method = \"rjags\",   autorun = TRUE)  ## parallel mode Age <- AgeS_Computation(   DATA = Data,   Nb_sample = Nb_sample,   SampleNames = c(\"GDB5\",\"GDB3\"),   PriorAge = rep(c(1,100), 2),   StratiConstraints = SC,   Iter = 10000,   quiet = FALSE,   jags_method = \"rjparallel\") } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"function computes age (ka) sample according model developed Combes Philippe (2017), based output Generate_DataFile Generate_DataFile_MG. sample, data available several BIN files, can analysed.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"","code":"Age_Computation(   DATA,   SampleName = DATA$SampleNames[1],   PriorAge = c(0.01, 100),   BinPerSample = c(1),   SavePdf = FALSE,   OutputFileName = c(\"MCMCplot\"),   OutputFilePath = c(\"\"),   SaveEstimates = FALSE,   OutputTableName = c(\"DATA\"),   OutputTablePath = c(\"\"),   LIN_fit = TRUE,   Origin_fit = FALSE,   distribution = c(\"cauchy\"),   I = 1,   Iter = 50000,   t = 5,   n.chains = 3,   quiet = FALSE,   roundingOfValue = 3 )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"DATA list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J, K, Nb_measurement, provided function Generate_DataFile Generate_DataFile_MG. DATA can contain information one sample. SampleName character: name sample. PriorAge numeric (default): lower upper bounds sample age parameter (ka). Note , length(PriorAge)=2. BinPerSample integer (default): vector number BIN files per sample. DATA one sample, BinPerSample vector must used run function Generate_DataFile Generate_DataFile_MG generating DATA object. SavePdf logical (default): TRUE save graph pdf file named OutputFileName folder OutputFilePath. OutputFileName character (default): name pdf file generated function SavePdf = TRUE; length(OutputFileName = 2, see PLOT OUTPUT Value section informations. OutputFilePath character (default): path pdf file generated function SavePdf = TRUE. equal \"\", must terminated \"/\". SaveEstimates logical (default): TRUE save Bayes estimates credible interval level 68% 95%  result gelman en Rubin test convergency, csv table named OutputFileName folder OutputFilePath. OutputTableName character (default): name table generated function SaveEstimates = TRUE. OutputTablePath character (default): path table generated function  SaveEstimates = TRUE. equal \"\", must terminated \"/\". LIN_fit logical (default): TRUE (default) allows linear component, top (default) saturating exponential curve, fitting dose response curves. See details section informations proposed dose response curves. Origin_fit logical (default): TRUE, forces dose response curves pass origin. See details section informations proposed growth curves. distribution character (default): type distribution defines individual equivalent dose values distributed around palaeodose. Allowed inputs \"cauchy\", \"gaussian\", \"lognormal_A\" \"lognormal_M\", see details section informations. integer (default): DATA contains data one sample, indicates ID number sample analysed. Iter integer (default): number iterations MCMC computation (information see rjags::jags.model). t integer (default): 1 every t iterations MCMC considered sampling posterior distribution (information see rjags::jags.model). n.chains integer (default): number independent chains model (information see rjags::jags.model). quiet logical (default): enables/disables rjags::rjags-package messages roundingOfValue integer (default):  Integer indicating number decimal places used, default = 3.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"NUMERICAL OUTPUT list containing following objects: Sampling corresponds sample posterior distributions age (ka), palaeodose (Gy) equivalent dose dispersion (Gy) parameters. Model_GrowthCurve, stating dose response fitting option chosen; Distribution, stating distribution chosen model dispersion individual equivalent dose values around palaeodose sample; PriorAge, stating priors used age parameter (ka). Gelman Rubin test convergence: prints result Gelman Rubin test convergence age, palaeodose equivalent dose dispersion parameters. result close one expected. addition, user must visually assess convergence trajectories looking graph generated function (see PLOT OUTPUT informations). convergences (Gelman Rubin test plot checking) satisfactory, user can consider printed estimates valid. Otherwise, user may try increasing number MCMC iterations (Iter), precise PriorAge parameter (example specify young sample c(0.01,10) old sample c(10,100)), changing parameter distribution growth curve, reach convergence.reach convergence. Credible intervals Bayes estimates: prints Bayes estimates, credible intervals 95% 68% age, palaeodose equivalent dose dispersion parameters sample. PLOT OUTPUT graph MCMC trajectories posterior distributions age, palaeodose equivalent dose dispersion parameters displayed. first line figure correponds age parameter, second palaeodose parameter third equivalent dose dispersion parameter. line, plot left represents MCMC trajectories, one right posterior distribution parameter. give results publication, recommend give Bayes estimate parameter well credible interval 95% 68%.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"Option growth curves AgeS_Computation Palaeodose_Computation, user can choose 4 dose response curves: Saturating exponential plus linear growth (AgeMultiBF_EXPLIN): x IR+, \\(f(x)=(1-exp(-x/b))+cx+d\\); select LIN_fit=TRUE Origin_fit=FALSE Saturating exponential growth (AgeMultiBF_EXP): x IR+, \\(f(x)=(1-exp(-x/b))+d\\); select LIN_fit = FALSE Origin_fit = FALSE Saturating exponential plus linear growth fitting origin (AgeMultiBF_EXPLINZO): x IR+, \\(f(x)=(1-exp(-x/b))+cx\\); select LIN_fit=TRUE Origin_fit=TRUE Saturating exponential growth fitting origin (AgeMultiBF_EXPZO): x IR+, \\(f(x)=(1-exp(-x/b))\\); select LIN_fit=FALSE Origin_fit=TRUE Option equivalent dose distribution around palaeodose use can choose : cauchy: Cauchy distribution location parameter equal palaeodose sample gaussian: Gaussian distribution mean equal palaeodose sample lognormal_A: log-normal distribution mean Average equal palaeodose sample lognormal_M: log-normal distribution Median equal palaeodose sample","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"Please note initial values MCMC currently chains since rely automatic initial value generation JAGS. optimal changed future. However, affect quality age estimates chains converged.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"Christophe, C., Kreutzer, S., Philippe, ., Guérin, G., 2024. Age_Computation(): Bayesian analysis OSL age estimation one sample. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"Combes, Benoit Philippe, Anne, 2017. Bayesian analysis multiplicative Gaussian error multiple ages estimation optically stimulated luminescence dating. Quaternary Geochronology (39, 24-34) Combes, B., Philippe, ., Lanos, P., Mercier, N., Tribolo, C., Guerin, G., Guibert, P., Lahaye, C., 2015. Bayesian central equivalent dose model optically stimulated luminescence dating. Quaternary Geochronology 28, 62-70. doi:10.1016/j.quageo.2015.04.001","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"Claire Christophe, Sebastian Kreutzer, Anne Philippe, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_Computation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian analysis for the OSL age estimation of one sample — Age_Computation","text":"","code":"## load data file generated by the function Generate_DataFile data(DATA1,envir = environment()) priorage <- c(10,60) # GDB3 is an old sample Age <- Age_Computation(  DATA = DATA1,  SampleName = \"GDB3\",  PriorAge = priorage,  Iter = 100,  quiet = TRUE) #> Warning: [plot_MCMC()] 'n.iter' out of range, reset to number of observations  #>  #>  #> >> Sample name << #> ---------------------------------------------- #> GDB3 #>  #> >> Results of the Gelman and Rubin criterion of convergence << #> ---------------------------------------------- #> \t Point estimate Uppers confidence interval #> A\t 0.991 \t\t 0.995  #> D\t 1.029 \t\t 1.119  #> sD\t 1.045 \t\t 1.181  #>  #>  #> --------------------------------------------------------------------------------------------------- #>  *** WARNING: The following information are only valid if the MCMC chains have converged  *** #> --------------------------------------------------------------------------------------------------- #>  #> parameter \t Bayes estimate \t  Credible interval  #> ---------------------------------------------- #> A \t\t 46.629  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95%\t 36.86 \t\t 57.949  #> \t\t\t\t at level 68%\t 40.47 \t\t 48.289  #> ---------------------------------------------- #> D \t\t 104.692  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95%\t 97.277 \t\t 108.278  #> \t\t\t\t at level 68%\t 103.068 \t\t 107.542  #> ---------------------------------------------- #> sD \t\t 15.526  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95%\t 10.156 \t\t 19.578  #> \t\t\t\t at level 68%\t 11.062 \t\t 15.991"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"function computes age OSL data consisting least two samples calibrate C-14 ages samples get age (ka). Ages OSL data computed according model given Combes Philippe (2017). Single-grain Multi-grain OSL measurements can analysed simultaneously (output Generate_DataFile Generate_DataFile_MG using combine_DataFiles). Samples, data available several BIN files, can analysed. C-14 data, user can choose one following radiocarbon calibration curve: Northern Southern Hemisphere marine atmospheric.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"","code":"Age_OSLC14(   DATA,   Data_C14Cal,   Data_SigmaC14Cal,   Nb_sample = DATA$Nb_sample,   SampleNames = DATA$SampleNames,   SampleNature,   PriorAge = rep(c(10, 60), Nb_sample),   SavePdf = FALSE,   OutputFileName = c(\"MCMCplot\", \"HPD_Cal14CCurve\", \"summary\"),   OutputFilePath = c(\"\"),   SaveEstimates = FALSE,   OutputTableName = c(\"DATA\"),   OutputTablePath = c(\"\"),   StratiConstraints = c(),   sepSC = c(\",\"),   BinPerSample = rep(1, sum(SampleNature[1, ])),   THETA = c(),   sepTHETA = c(\",\"),   LIN_fit = TRUE,   Origin_fit = FALSE,   distribution = c(\"cauchy\"),   Model_C14 = c(\"full\"),   CalibrationCurve = c(\"IntCal20\"),   Iter = 10000,   burnin = 4000,   adapt = 1000,   t = 5,   n.chains = 3,   jags_method = \"rjags\",   autorun = FALSE,   quiet = FALSE,   roundingOfValue = 3,   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"DATA Two types inputs supported. (1): list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J, K, Nb_measurement, provided function Generate_DataFile, Generate_DataFile_MG combine_DataFiles. DATA contains information one sample. stratigraphic relations samples, informations DATA must ordered order increasing ages. See details section informations. (2): object class BayLum.list provided output Age_OSLC14. input class BayLum.list identified, new JAGS model created. Instead, JAGS model specified within BayLum.list extended. Useful convergence originally achieved complete restart desirable. Data_C14Cal numeric vector: corresponding C-14 age estimate (years, conversion ka automatically done function). stratigraphic relations samples, Data_C14Cal must ordered order increasing ages. Data_SigmaC14Cal numeric: corresponding error C-14 age estimates. Nb_sample numeric: number samples (OSL data C-14 age), (Nb_sample>3, least sample OSL data one sample C-14 age). SampleNames character: sample names OSL data C14 data. length vector equal Nb_sample. stratigraphic relation, vector must ordered increasing order (mix OSL samples C-14 ages needed). SampleNature matrix: states nature sample. Row number SampleNature matrix equal 2 column number equal Nb_sample. First line matrix: SampleNature[1,] states sample whose number ID equal , OSL sample 1 0. Second line matrix: SampleNature[2,] states sample whose number ID equal , C-14 sample 1 `0. PriorAge numeric (default): lower upper bounds age parameter sample (ka). Note , length(PriorAge) = 2*Nb_sample sand PriorAge[2i-1,2i] corresponds lower upper bounds sample whose number ID equal . SavePdf logical (default): TRUE save graphs pdf file named OutputFileName folder OutputFilePath. OutputFileName character (default): name pdf file generated function SavePdf=TRUE, length(OutputFileName)=3, see PLOT OUTPUT Value section informations. OutputFilePath character (default): path pdf file generated function SavePdf=TRUE. equal \"\", must terminated \"/\". SaveEstimates logical (default): TRUE save Bayes' estimates, credible interval level 68% 95%  result Gelman en Rubin test convergence, CSV-table named OutputFileName folder OutputFilePath. OutputTableName character (default): name table generated function SaveEstimates=TRUE. OutputTablePath character (default): path table generated function SaveEstimates=TRUE. equal \"\", must terminated \"/\". StratiConstraints matrix character (default): input object stratigraphic relation samples. stratigraphic relation samples see details section instructions regarding correctly fill StratiConstraints, user can refer matrix CSV-file character. Otherwise, default value suitable. sepSC character (default): StratiConstraints character, indicate column separator StratiConstraints CSV-file. BinPerSample numeric (default): vector number BIN-files per OSL sample. length vector equal number OSL samples. BinPerSample[] corresponds number BIN files sample whose number ID equal .  information fill vector, refer details Generate_DataFile Generate_DataFile_MG. THETA numeric matrix character (default): input object systematic individual error OSL samples. systematic errors considered, see details section instructions regarding correctly fill THETA; user can refer matrix (numeric matrix) csv file (character). Otherwise, default value suitable, individual error considered. sepTHETA character (default): THETA character, indicate column separator THETA CSV-file. LIN_fit logical (default): TRUE (default) allows linear component, top (default) saturating exponential curve, fitting dose response curves, OSL samples. See details informations proposed dose response curves. Origin_fit plogical (default): TRUE, forces dose response curves pass origin. See details informations proposed growth curves, OSL samples. distribution character (default): type distribution defines individual equivalent dose values distributed around palaeodose, OSL samples. Allowed inputs \"cauchy\", \"gaussian\", \"lognormal_A\" \"lognormal_M\", see details informations. Model_C14 character (default): \"full\", error estimate calibration curve taken account, C-14 samples.  \"naive\" error taken account age estimate. CalibrationCurve character (default): calibration curve chosen, C-14 samples. Allowed inputs \"Intcal13\" \"Intcal13\" Northern Hemisphere atmospheric radiocarbon calibration curve, \"Marine13\" \"Marine13\" Marine radiocarbon calibration curve, \"SHCal13\" \"SHCal20\" Southern Hemisphere atmospheric radiocarbon calibration curve csv file, tree columns, first column dedicated \"Cal.BP\", second \"XC-14.age\", third \"Error\". decimal file must dot, separator must comma. Iter integer (default): number iterations run used assess convergence ages (see runjags::run.jags]). burnin integer (default): number iterations used \"home \" stationary posterior distribution. used assessing convergence (see runjags::run.jags]). adapt integer (default): number iterations used adaptive phase simulation (see runjags::run.jags]). t numeric (default): 1 every t iterations MCMC considered sampling posterior distribution (information see rjags::jags.model. n.chains numeric (default): number independent chains model (information see [rjags::jags.model). jags_method character (default): select method use order call JAGS, supported  \"rjags\" (default), rjparallel, simple, interruptible, parallel, snow (information possibilities, see runjags::run.jags]) autorun logical (default): choose automate JAGS processing. JAGS model automatically extended convergence reached (information see runjags::autorun.jags). quiet logical (default): enables/disables rjags::rjags-package messages roundingOfValue integer (default):  Integer indicating number decimal places used, default = 3. ... arguments can passed control Bayesian process, see details supported arguments","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"NUMERICAL OUTPUT list containing following objects: Sampling: corresponds sample posterior distributions age parameters (ka C14 samples OSL samples); PriorAge: stating priors used age parameter; StratiConstraints: stating stratigraphic relations samples considered model; Model_OSL_GrowthCurve: stating dose response fitting option chosen; Model_OSL_Distribution: stating distribution chosen model dispersion individual equivalent dose values around palaeodose sample; Model_C14: stating model chosen (\"full\" \"naive\"); CalibrationCurve: stating radiocarbon calibration curve chosen; Outlier: stating names samples must outliers. Gelman Rubin test convergency: prints result Gelman Rubin test convergence age estimate sample. result close one expected. addition, user must visually assess convergence trajectories looking graph generated function (see PLOT OUTPUT informations). convergences (Gelman Rubin test plot checking) satisfactory, user can consider estimates valid. Otherwise, user may try increasing number MCMC iterations (Iter) precise PriorAge parameter reach convergence. Credible intervals Bayes estimates: prints Bayes' estimates, credible intervals 95% 68% age parameters sample. JAGS model output: returns JAGS model class \"runjags\". PLOT OUTPUT MCMC trajectories: graph MCMC trajectories posterior distributions age parameter displayed.  line, plot left represents MCMC trajectories, one right posterior distribution parameter. Age estimate HPD 95% 14C samples calibration curve: plot age estimate HPD calibration plot. Summary sample age estimates: plot credible intervals Bayes estimate sample age graph.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"Note three types arguments previous list. arguments information concerning OSL samples: DATA, BinPerSample, THETA, sepTHETA, LIN_fit, Origin_fit, distribution. arguments information concerning C14 samples: Data_C14Cal, Data_SigmaC14Cal, Model_C14, CalibrationCurve. arguments information concerning samples: Nb_sample, SampleNames, SampleNature, PriorAge, SavePdf, OutputFileName, OutputFilePath, SaveEstimates, OutputTableName, OutputTablePath, StratiConstraints, sepSC. Supported ... arguments fill `StratiConstraints? stratigraphic relations samples, 14C estimate age Data_C14Cal must ordered order increasing ages, informations DATA. Names SampleNames must ordered corresponds order Data_C14Cal DATA, also needed mix names OSL samples 14C samples. user can fill StratiConstraints matrix follow. Size matrix: row number StratiConstraints matrix equal Nb_sample+1, column number equal Nb_sample. First line matrix: {1,...,Nb_Sample}, StratiConstraints[1,]=1 means lower bound sample age (given PriorAge[2i-1]) sample whose number ID equal , taken account. Sample relations:  j {2,...,Nb_Sample+1} {j,...,Nb_Sample}, StratiConstraints[j,]=1 sample age whose number ID equal j-1 lower sample age whose number ID equal . Otherwise, StratiConstraints[j,]=0. Note StratiConstraints_{2:Nb_sample+1,1:Nb_sample} upper triangular matrix. user can also use SCMatrix  SC_Ordered (samples ordered) function construct StratiConstraints matrix. user can also refer csv file contains relation samples defined . user must careful separator used csv file using argument sepSC. fill THETA covariance matrix concerning common individual error? systematic errors considered, user can fill THETA matrix follow. row number THETA equal column number, equal Nb_sample. {1,...,Nb_sample}, THETA[,] contains individual error plus systematic error sample whose number ID equal . ,j {1,...,Nb_sample} different j , THETA[,j] contains common error samples whose number ID equal j. Note THETA[,j] symmetric matrix. user can also refer .csv file contains errors defined . Option growth curves Age_Computation Palaeodose_Computation, user can choose 4 dose response curves: Saturating exponential plus linear growth (AgesMultiCS2_EXPLIN): x IR+, f(x)=(1-exp(-x/b))+cx+d; select LIN_fit=TRUE Origin_fit=FALSE Saturating exponential growth (AgesMultiCS2_EXP): x IR+, f(x)=(1-exp(-x/b))+d; select LIN_fit=FALSE Origin_fit=FALSE Saturating exponential plus linear growth fitting origin (AgesMultiCS2_EXPLINZO): x IR+, f(x)=(1-exp(-x/b))+cx; select LIN_fit=TRUE Origin_fit=TRUE Saturating exponential growth fitting origin (AgesMultiCS2_EXPZO): x IR+, f(x)=(1-exp(-x/b)); select LIN_fit=FALSE Origin_fit=TRUE Option equivalent dose distribution around palaeodose use can choose : cauchy: Cauchy distribution location parameter equal palaeodose sample gaussian: Gaussian distribution mean equal palaeodose sample lognormal_A: log-normal distribution mean Average equal palaeodose sample lognormal_M: log-normal distribution Median equal palaeodose sample precision Model propose two models \"full\" \"naive\". Model='full' means measurement error error calibration curve taken account Bayesian model; Model=\"naive\" means error measurement taken account mode. precisely, model considered , one developed Christen, JA (1994), assume multiplicative effect errors address problem outliers. addition, penalise variables outliers damage estimation, introduce structure mixture, means variable considered outlier addition multiplicative error.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"Please note initial values MCMC currently chains since rely automatic initial value generation JAGS. optimal changed future. However, affect quality age estimates chains converged.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"Christophe, C., Philippe, ., Kreutzer, S., Baumgarten, F.H., 2024. Age_OSLC14(): Bayesian analysis age estimation OSL measurements C-14 ages various samples. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B, Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887. Hogg AG, Hua Q, Blackwell PG, Niu M, Buck CE, Guilderson TP, Heaton TJ, Palmer JG, Reimer PJ, Reimer RW, Turney CSM, Zimmerman SRH. 2013. SHCal13 Southern Hemisphere calibration, 0-50000 years cal BP. Radiocarbon 55(4):1889-1903","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"Claire Christophe, Anne Philippe, Guillaume Guerin, Sebastian Kreutzer, Frederik Harly Baumgarten","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Age_OSLC14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian analysis for age estimation of OSL measurements and C-14 ages of various samples — Age_OSLC14","text":"","code":"## Load data # OSL data data(DATA1,envir = environment()) data(DATA2,envir = environment()) Data <- combine_DataFiles(DATA2,DATA1)  # 14C data C14Cal <- DATA_C14$C14[1,1] SigmaC14Cal <- DATA_C14$C14[1,2] Names <- DATA_C14$Names[1]  # Prior Age prior <- rep(c(1,60),3) samplenature <- matrix(  data = c(1,0,1,0,1,0),  ncol = 3,  nrow = 2,  byrow = TRUE)  SC <- matrix(  data = c(1,1,1,0,1,1,0,0,1,0,0,0),  ncol = 3,  nrow =4 ,  byrow = TRUE)  ## Age computation of samples if (FALSE) { # \\dontrun{ Age <- Age_OSLC14(  DATA = Data,  Data_C14Cal = C14Cal,  Data_SigmaC14Cal = SigmaC14Cal,  SampleNames = c(\"GDB5\",Names,\"GDB3\"),  Nb_sample = 3,  SampleNature = samplenature,  PriorAge = prior,  StratiConstraints = SC,  Iter = 20,  burnin = 20,  adapt = 20,  n.chains = 2) } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package BayLum. — BayLum-deprecated","title":"Deprecated functions in package BayLum. — BayLum-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","text":"collection various R functions Bayesian analysis luminescence  data C-14 age estimates. includes, amongst others, data import,  export, application age palaeodose models.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","text":"package based functions: [Generate_DataFile()]  [Generate_DataFile_MG()] import luminescence data. functions create  list containing informations compute age single-grain OSL  measurements first function multi-grain OSL measurements  second. functions: [Age_Computation()] [AgeS_Computation()] use Bayesian  analysis OSL age estimation one various samples according  difference models (e.g. different dose-response curves different  equivalent dose distributions around palaeodose). possible consider various BIN/BINX-files per sample, compute  ages samples stratigraphic constraints integrate systematic  errors. possible calibrate C-14 age function  [AgeC14_Computation()]. can also estimate chronology containing 14C age  OSL samples function [Age_OSLC14()].","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","text":"work received state financial support managed Agence Nationale  de la Recherche (France) program *Investissements d'avenir*  (ref. [ANR-10-LABX-52](https://lascarbx.labex.u-bordeaux.fr).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","text":"Philippe, ., Guérin, G., Kreutzer, S., 2019. BayLum - R package  Bayesian analysis OSL ages: introduction. *Quaternary Geochronology*  49, 16-24. doi:10.1016/j.quageo.2018.05.009","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/BayLum-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Chronological Bayesian Models Integrating Optically Stimulated Luminescence and C-14 Dating — BayLum-package","text":"Maintainer: Anne Philippe anne.philippe@univ-nantes.fr (ORCID) Authors: Claire Christophe Sebastian Kreutzer (ORCID) Guillaume Guérin (ORCID) Frederik Harly Baumgarten (ORCID) Nicolas Frerebeau (ORCID) contributors: Université Bordeaux Montaigne [copyright holder, funder] CNRS [funder] LabEx Sciences archéologiques de Bordeaux [funder]","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA1.html","id":null,"dir":"Reference","previous_headings":"","what":"DATA of sample named GDB3  — DATA1","title":"DATA of sample named GDB3  — DATA1","text":"list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J,K,Nb_measurement obtained using Generate_DataFile function single-grain OSL measurementsl sample GDB3.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATA of sample named GDB3  — DATA1","text":"","code":"data(\"DATA1\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DATA of sample named GDB3  — DATA1","text":"list containing: LT: (one list per sample): list contains L/T values corresponding sample; sLT: (one list per sample): list contains uncertainties L/T values corresponding sample; ITimes: (one list per sample): list contains irradiation time values corresponding sample; dLab= matrix containing line , laboratory dose rate variance sample ; ddot_env: matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose: (one list per sample): list contains regenerated doses; J: vector giving, BIN file, number aliquots selected analysis; K: vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement: vector giving, BIN file, number measurements;","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DATA of sample named GDB3  — DATA1","text":"informations sample refer following publication: Tribolo, C., Asrat, ., Bahain, J. J., Chapon, C., Douville, E., Fragnol, C., Hernandez, M., Hovers, E., Leplongeon, .,  Martin, L,  Pleurdeau, D,  Pearson, O ,  Puaud, S,  Assefa, Z. (2017). Across Gap: Geochronological Sedimentological Analyses Late Pleistocene-Holocene Sequence Goda Buticha, Southeastern Ethiopia. PloS one, 12(1), e0169418.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATA of sample named GDB3  — DATA1","text":"","code":"data(DATA1) str(DATA1) #> List of 11 #>  $ LT            :List of 1 #>   ..$ : num [1:101, 1:6] 5.66 6.9 4.05 3.43 4.97 ... #>  $ sLT           :List of 1 #>   ..$ : num [1:101, 1:6] 0.373 0.315 0.245 0.181 0.246 ... #>  $ ITimes        :List of 1 #>   ..$ : num [1:101, 1:5] 160 160 160 160 160 160 160 160 160 160 ... #>  $ dLab          : num [1:2, 1] 1.53e-01 5.89e-05 #>  $ ddot_env      : num [1:2, 1] 2.26 0.0617 #>  $ regDose       :List of 1 #>   ..$ : num [1:101, 1:5] 24.6 24.6 24.6 24.6 24.6 ... #>  $ J             : num 101 #>  $ K             : num 5 #>  $ Nb_measurement: num 14 #>  $ SampleNames   : chr \"samp 1\" #>  $ Nb_sample     : num 1 #>  - attr(*, \"originator\")= chr \"create_DataFile\""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA2.html","id":null,"dir":"Reference","previous_headings":"","what":"DATA on sample named GDB5  — DATA2","title":"DATA on sample named GDB5  — DATA2","text":"list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J,K,Nb_measurement obtained using Generate_DataFile function  single-grain OSL measurementsl sample GDB5.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATA on sample named GDB5  — DATA2","text":"","code":"data(\"DATA2\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DATA on sample named GDB5  — DATA2","text":"data frame containing: LT: (one list per sample): list contains L/T values corresponding sample; sLT: (one list per sample): list contains uncertainties L/T values corresponding sample; ITimes: (one list per sample): list contains irradiation time values corresponding sample; dLab: matrix containing line , laboratory dose rate variance sample ; ddot_env: matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose: (one list per sample): list contains regenerated doses; J: vector giving, BIN file, number aliquots selected analysis; K: vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement: , vector giving, BIN file, number measurements;","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DATA on sample named GDB5  — DATA2","text":"informations sample refer following publication: Tribolo, C., Asrat, ., Bahain, J. J., Chapon, C., Douville, E., Fragnol, C., Hernandez, M., Hovers, E., Leplongeon, .,  Martin, L,  Pleurdeau, D,  Pearson, O ,  Puaud, S,  Assefa, Z. (2017). Across Gap: Geochronological Sedimentological Analyses Late Pleistocene-Holocene Sequence Goda Buticha, Southeastern Ethiopia. PloS one, 12(1), e0169418.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATA on sample named GDB5  — DATA2","text":"","code":"data(DATA2) str(DATA2) #> List of 11 #>  $ LT            :List of 1 #>   ..$ : num [1:188, 1:6] 4.54 2.73 2.54 2.27 1.48 ... #>  $ sLT           :List of 1 #>   ..$ : num [1:188, 1:6] 0.333 0.386 0.128 0.171 0.145 ... #>  $ ITimes        :List of 1 #>   ..$ : num [1:188, 1:5] 40 40 40 40 40 40 40 40 40 40 ... #>  $ dLab          : num [1:2, 1] 1.53e-01 5.89e-05 #>  $ ddot_env      : num [1:2, 1] 2.512 0.0563 #>  $ regDose       :List of 1 #>   ..$ : num [1:188, 1:5] 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 ... #>  $ J             : num 188 #>  $ K             : num 5 #>  $ Nb_measurement: num 14 #>  $ SampleNames   : chr \"samp 1\" #>  $ Nb_sample     : num 1 #>  - attr(*, \"originator\")= chr \"create_DataFile\""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA3.html","id":null,"dir":"Reference","previous_headings":"","what":"DATA of sample named FER1 — DATA3","title":"DATA of sample named FER1 — DATA3","text":"list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J,K,Nb_measurement obtained using Generate_DataFile function multi-grain OSL measurementsl sample FER1.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DATA of sample named FER1 — DATA3","text":"","code":"data(\"DATA3\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DATA of sample named FER1 — DATA3","text":"list containing: LT: (one list per sample): list contains L/T values corresponding sample; sLT: (one list per sample): list contains uncertainties L/T values corresponding sample; ITimes: (one list per sample): list contains irradiation time values corresponding sample; dLab= matrix containing line , laboratory dose rate variance sample ; ddot_env: matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose: (one list per sample): list contains regenerated doses; J: vector giving, BIN file, number aliquots selected analysis; K: vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement: vector giving, BIN file, number measurements;","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DATA of sample named FER1 — DATA3","text":"informations sample refer following publication: Guerin, G., Frouin, M., Talamo, S., Aldeias, V., Bruxelles, L., Chiotti, L., Goldberg, P., Hublin, J.J., Jain, M., Lahaye, C., Madelaine, S., Maureille, B., McPherron, S., Mercier, N., Murray, ., Sandgathe, D., Steele, T., Thomsen, K., Turq, . (2015). multi-method luminescence dating Palaeolithic sequence La Ferrassie based new excavations adjacent La Ferrassie 1 2 skeletons. Journal Archaeological Science, 58, 147-166.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DATA of sample named FER1 — DATA3","text":"","code":"data(DATA3) str(DATA3) #> List of 13 #>  $ LT            :List of 1 #>   ..$ : num [1:10, 1:6] 6.91 5.97 7.26 4.63 10.29 ... #>  $ sLT           :List of 1 #>   ..$ : num [1:10, 1:6] 0.0744 0.035 0.0474 0.1428 0.0451 ... #>  $ ITimes        :List of 1 #>   ..$ : num [1:10, 1:5] 400 400 400 400 400 400 400 400 400 400 ... #>  $ dLab          : num [1:2, 1] 0.081 0.0004 #>  $ ddot_env      : num [1:2, 1] 1.93 0.00548 #>  $ regDose       :List of 1 #>   ..$ : num [1:10, 1:5] 32.4 32.4 32.4 32.4 32.4 32.4 32.4 32.4 32.4 32.4 ... #>  $ J             : num 10 #>  $ K             : num 5 #>  $ Nb_measurement: num 16 #>  $ SampleNames   : chr \"samp 1\" #>  $ Nb_sample     : num 1 #>  $ SampleNames   : chr \"samp 1\" #>  $ Nb_sample     : num 1 #>  - attr(*, \"originator\")= chr \"create_DataFile\""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA_C14.html","id":null,"dir":"Reference","previous_headings":"","what":"C14 cal age estiamte and its error — DATA_C14","title":"C14 cal age estiamte and its error — DATA_C14","text":"C14 cal age estiamtes error samples S-EVA-26510, S-EVA-26506, S-EVA-26507, S-EVA-26508.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA_C14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"C14 cal age estiamte and its error — DATA_C14","text":"","code":"data(\"DATA_C14\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA_C14.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"C14 cal age estiamte and its error — DATA_C14","text":"list containing: Names: character vector sample names; C14: numeric matrix, first column 14C Cal age samples, second column errors.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA_C14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"C14 cal age estiamte and its error — DATA_C14","text":"informations sample refer following publication: Guerin, G., Frouin, M., Talamo, S., Aldeias, V., Bruxelles, L., Chiotti, L., Goldberg, P., Hublin, J.J., Jain, M., Lahaye, C., Madelaine, S., Maureille, B., McPherron, S., Mercier, N., Murray, ., Sandgathe, D., Steele, T., Thomsen, K., Turq, . (2015). multi-method luminescence dating Palaeolithic sequence La Ferrassie based new excavations adjacent La Ferrassie 1 2 skeletons. Journal Archaeological Science, 58, 147-166.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/DATA_C14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"C14 cal age estiamte and its error — DATA_C14","text":"","code":"data(DATA_C14) (DATA_C14) #> $Names #> [1] \"S-EVA-26510\" \"S-EVA-26506\" \"S-EVA-26507\" \"S-EVA-26508\" #>  #> $C14 #>       [,1] [,2] #> [1,] 37379  382 #> [2,] 43369  291 #> [3,] 42153  652 #> [4,] 42367  678 #>"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"function used generate, BIN file(s), list values : Single-grain OSL intensities associated uncertainties, regenerative doses, etc., input Bayesian models. easy--use, function requires rigorous organisation - needed files arranged one folder - informations concerning BIN file.  possible process data various samples simultaneously consider one BIN file per sample.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"","code":"Generate_DataFile(   Path,   FolderNames,   Nb_sample,   Nb_binfile = length(FolderNames),   BinPerSample = rep(1, Nb_sample),   sepDP = c(\",\"),   sepDE = c(\",\"),   sepDS = c(\",\"),   sepR = c(\"=\"),   verbose = TRUE,   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"Path character (required): path project folder, containing one sub folders BIN files located. equal \"\", must terminated \"/\". FolderNames character (required): list names sub-folders containing BIN files sub folder must contain BIN file associated csv files. See details informations associated csv files required sub folders. one BIN file per sample, see details section instructions regarding correctly fill FolderNames vector. Nb_sample integer (required): number samples. Nb_binfile integer (default): number BIN files. must equal , greater Nb_sample. BinPerSample integer vector (default): vector number BIN files per sample. length vector must equal Nb_sample sum entries vector must equal Nb_binfile. one BIN file per sample, see details section instructions regarding correctly fill BinPerSample vector. Otherwise, vector must contain list 1 values. sepDP character (default): column separator DiscPose.csv files. sepDE character (default): column separator DoseEnv.csv files. sepDS character (default): column separator `DoseLab.csv“ files. sepR character (default): column separator Rule.csv files. verbose logical (default): enable/disable verbose mode ... arguments can passed Luminescence::read_BIN2R.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"list containing following objects: LT (one list per sample); list contains L/T values corresponding sample; sLT (one list per sample); list contains uncertainties L/T values corresponding sample; ITimes (one list per sample); list contains irradiation time values corresponding sample; dLab, matrix containing line , laboratory dose rate variance sample ; ddot_env, matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose (one list per sample); list contains regenerated doses; J, vector giving, BIN file, number aliquots selected analysis; K, vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement, vector giving, BIN file, number measurements. ** save list ** can save list .RData object. , can use function save. , load list can use function load (see example section fore details).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"Path FolderNames, function goes sub folders containing BIN files associated information compute luminescence data. ** required files subfolder? ** sub folder can named, example, sample name followed number; must contain: bin.bin: bin file renamed bin.BIN (note: name files matters); DiscPos.csv: two columns csv file containing list disc grain position number previously selected grains (typically list include position grains based sensitivity, recycling properties); DoseEnv.csv: two columns file containing observation natural (environmental), dose rate, non-shared variance (.e. removing shared errors), Gy. Note: user shall provide squared value error associated dose rate experienced sample grains nature; DoseSourve.csv: two columns file containing observation laboratory dose rate, variance (squared error) Gy; rule.csv: csv file containing information beginSignal=  first channel summing natural regenerative OSL signal (typically 1 6); endSignal= last channel summing natural regenerative OSL signal (typically 5 10); beginBackground= first channel background estimation natural regenerative OSL signal (typically 76 81); endBackground= last channel background estimation natural regenerative OSL signal (typically 95 100); beginTest=, endTest=, beginTestBackground=, endTestBackground= values , test dose response (typically values used); inflatePercent= uncertainty arising instrument reproducibility (typically 0.02, .e. 2\\ nbOfLastCycleToRemove= number cycles end SAR protocol included dose response curve fitting (typically 1 recycling test performed, 2 recycling IR depletion tested). ** fill FolderNames vector? ** FolderNames vector length Nb_binfile. FolderNames[] name (e.g., Sample1-File1, successive names separated \"/\" signs, BIN files subfolders, e.g. Sample1/File1) subfolder containing informations BIN file ID number . names FolderNames ordered following two rules: names FolderNames vector must ordered following sample order (names subfolders containing BIN files sample follow FolderNames vector, e.g. Sample1, Sample2-File1, Sample2-File2, etc.). stratigraphic constraints apply samples, Bayesian model stratigraphic constraints implemented, names FolderNames vector must ordered order increasing ages.  example, FolderNames=c(noun1,noun2), case noun1 (respectively, noun2) corresponds subfolder name containing BIN file sample 1 (respectively sample 2). addition, know sample 1 younger sample 2, FolderNames vector correctly filled.  conversely, FolderNames=c(noun2,noun1), analysis performed AgeS_Computation consistent. ** fill BinPerSample vector? ** BinPerSample[] correponds number BIN files sample whose number ID equal . example, let us consider case two samples (Sample1 Sample2), 2 BIN files Sample1 1 Sample2. case, Nb_binfile=3 Nb_sample=2. user may set FolderNames=c(\"Sample1-File1\", \"Sample1-File2\", \"Sample2-File1\"), case \"Sample1-File1\" name subfolder containing first BIN file Sample1, \"Sample1-File2\" name  subfolder second BIN file Sample1; eventually, \"Sample2-File1\" name subfolder containing BIN file second sample. case, BinPerSample=c(2,1). general BIN-file structure, reader referred following website: http://www.nutech.dtu.dk/ function Luminescence::read_BIN2R developed Luminescence::Luminescence-package package used read BIN files.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"Claire Christophe, Sebastian Kreutzer, Anne Philippe, Guillaume Guerin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"Christophe, C., Kreutzer, S., Philippe, ., 2024. Generate_DataFile-deprecated(): Generates, one (several) BIN-file(s) Single-grain OSL measurements, list luminescence data information statistical analysis (DEPRECATED). : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates, from one (or several) BIN-file(s) of Single-grain OSL measurements, a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile-deprecated","text":"","code":"if (FALSE) { # \\dontrun{ ## Example for one sample with one Bin File path<- system.file(\"extdata/samp1\", \"\", package=\"BayLum\") folder=\"\" nbsample=1  # give the number of sample Data <- Generate_DataFile(  Path = path,  FolderNames = folder,  Nb_sample = nbsample,  verbose = FALSE) str(Data)  ## to save information in RData object in folder containing bin file # save(Data,file=c(paste(path,folder,'Data.RData',sep=\"\"))) ## to load information containing Data.RData object # load(file=c(paste(path,folder,\"Data.RData\",sep=\"\"))) } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"function used generate, BIN file(s), list values : Multi-grain OSL intensities associated uncertainties, regenerative doses, etc., input Bayesian models. easy--use, function requires rigorous organisation - needed files arranged one folder - informations concerning BIN file. possible process data various samples simultaneously consider one BIN-file per sample.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"","code":"Generate_DataFile_MG(   Path,   FolderNames,   Nb_sample,   Nb_binfile = length(FolderNames),   BinPerSample = rep(1, Nb_sample),   sepD = c(\",\"),   sepDE = c(\",\"),   sepDS = c(\",\"),   sepR = c(\"=\"),   verbose = TRUE,   force_run1_at_a_time = FALSE,   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"Path character (required): path project folder, containing one sub folders BIN files located. equal \"\", must end \"/\". FolderNames character (required) vector: list names sub-folders containing BIN files sub folder must contain BIN file associated csv files. See details informations associated csv files required sub folders. one BIN file per sample, see details section instructions regarding correctly fill FolderNames vector. Nb_sample integer (required): number samples Nb_binfile integer (default): number BIN files. must equal , greater Nb_sample. BinPerSample integer vector (default): vector number BIN files per sample. length vector must equal Nb_sample sum entries vector must equal Nb_binfile. one BIN file per sample, see details section instructions regarding correctly fill BinPerSample vector. Otherwise, vector must contain list 1 values. sepD character (default): column separator DiscPose.csv files. sepDE character (default): column separator DoseEnv.csv files. sepDS character (default): column separator DoseLab.csv files. sepR character (default): column separator Rule.csv files. verbose logical (default): enable/disable verbose mode force_run1_at_a_time logical (default): set TRUE, order records pushed follow one \"Run 1 time\" order (, sequence steps performed one aliquot moving next aliquot), regardless original sequence. default FALSE 'BayLum' assumes sample measured \"Run 1 time\" option (Risø readers, lexsyg readers another option). words, argument allows automatically correct input data follow order 'BayLum' expects. default value TRUE?. re-ordering must fail measurement position used different samples! typically happens different BIN/BINX files merged. ... arguments can passed Luminescence::read_BIN2R.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"list containing following objects: LT (one list per sample); list contains L/T values corresponding sample; sLT (one list per sample); list contains uncertainties L/T values corresponding sample; ITimes (one list per sample); list contains irradiation time values corresponding sample; dLab, matrix containing line , laboratory dose rate variance sample ; ddot_env, matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose (one list per sample); list contains regenerated doses; J, vector giving, BIN file, number aliquots selected analysis; K, vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement, vector giving, BIN file, number measurements; ** save list ** can save list .RData object. , can use function save. , load list can use function load (see example section fore details).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"Path FolderNames, function goes sub folders containing BIN files associated information compute luminescence data. ** required files subfolder? ** subfolder can named, example, sample name followed number; must contain: bin.bin, bin file renamed bin.BIN (note: name files matters); Disc.csv, one columns csv file containing list disc number previously selected grains (typically list include position grains based sensitivity, recycling properties); DoseEnv.csv, two columns file containing observation natural (environmental), dose rate, non-shared variance (.e. removing shared errors), Gy. Note: user shall provide squared value error associated dose rate experienced sample grains nature; DoseSourve.csv, two columns file containing observation laboratory dose rate, variance (squared error), Gy; rule.csv, csv file containing information beginSignal=  first channel summing natural regenerative OSL signal (typically 1 6); endSignal= last channel summing natural regenerative OSL signal (typically 5 10); beginBackground= first channel background estimation natural regenerative OSL signal (typically 76 81); endBackground= last channel background estimation natural regenerative OSL signal (typically 95 100); beginTest, endTest, beginTestBackground, endTestBackground= values , test dose response (typically values used); inflatePercent= uncertainty arising instrument reproducibility (typically 0.02, .e. 2\\ nbOfLastCycleToRemove= number cycles end SAR protocol included dose response curve fitting (typically 1 recycling test performed, 2 recycling IR depletion tested). ** fill FolderNames vector? ** FolderNames vector length Nb_binfile. FolderNames[] name (e.g., Sample1-File1, successive names separated \"/\" signs, BIN files subfolders, e.g. Sample1/File1) subfolder containing informations BIN file ID number . names FolderNames ordered following two rules: names FolderNames vector must ordered following sample order (names subfolders containing BIN files sample follow FolderNames vector, e.g. Sample1, Sample2-File1, Sample2-File2, etc.). stratigraphic constraints apply samples, Bayesian model stratigraphic constraints implemented, names FolderNames vector must ordered order increasing ages.  example, FolderNames=c(noun1,noun2), case noun1 (respectively, noun2) corresponds subfolder name containing BIN file sample 1 (respectively sample 2). addition, know sample 1 younger sample 2, FolderNames vector correctly filled.  conversely, FolderNames=c(noun2,noun1), analysis performed AgeS_Computation consistent. ** fill BinPerSample vector? ** BinPerSample[] corresponds number BIN files sample whose number ID equal . example, let us consider case two samples (Sample1 Sample2), 2 BIN files Sample1 1 Sample2. case, Nb_binfile=3 Nb_sample=2. user may set FolderNames=c(\"Sample1-File1\", \"Sample1-File2\", \"Sample2-File1\"), case \"Sample1-1\" name subfolder containing first BIN file Sample1, \"Sample1-File2\" name  subfolder second BIN file Sample1; eventually, \"Sample2-1\" name subfolder containing BIN file second sample. case, BinPerSample=c(2,1). general BIN-file structure, reader referred following website:  http://www.nutech.dtu.dk/ function Luminescence::read_BIN2R used read BIN files.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"function imports BIN/BINX-file records previously selected.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"Claire Christophe, Sebastian Kreutzer, Anne Philippe, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"Christophe, C., Kreutzer, S., Philippe, ., Guérin, G., 2024. Generate_DataFile_MG-deprecated(): Generates, one (several) BIN file(s) Multi-grain OSL measurements list luminescence data information statistical analysis (DEPRECATED). : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Generate_DataFile_MG-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates, from one (or several) BIN file(s) of Multi-grain OSL measurements a list of luminescence data and information before statistical analysis (DEPRECATED) — Generate_DataFile_MG-deprecated","text":"","code":"if (FALSE) { # \\dontrun{ path <- system.file(\"extdata/FER1\", \"\", package=\"BayLum\") folder <- \"\" # give the number of sample nbsample <- 1 DATA <- Generate_DataFile_MG(  Path = path,  FolderNames = folder,  Nb_sample = nbsample) str(DATA)  # to save information in RData object in folder containing bin file #save(DATA,file=c(paste(path,folder,'DATA.RData',sep=\"\"))) # to load information containing DATA.RData object #load(file=c(paste(path,folder,\"DATA.RData\",sep=\"\"))) } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal13.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmospheric North data for calibration of 14C age — IntCal13","title":"Atmospheric North data for calibration of 14C age — IntCal13","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data AtmosphericNorth_CalC14 allows calibration mid-latitude Northern Hemisphere atmospher reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmospheric North data for calibration of 14C age — IntCal13","text":"","code":"data(\"IntCal13\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal13.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmospheric North data for calibration of 14C age — IntCal13","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal13.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Atmospheric North data for calibration of 14C age — IntCal13","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B, Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal13.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmospheric North data for calibration of 14C age — IntCal13","text":"","code":"data(IntCal13) ## maybe str(IntCal13) ; head(IntCal13) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal20.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmospheric North data for calibration of 14C age — IntCal20","title":"Atmospheric North data for calibration of 14C age — IntCal20","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data AtmosphericNorth_CalC14 allows calibration mid-latitude Northern Hemisphere atmospher reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmospheric North data for calibration of 14C age — IntCal20","text":"","code":"data(\"IntCal20\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal20.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmospheric North data for calibration of 14C age — IntCal20","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal20.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Atmospheric North data for calibration of 14C age — IntCal20","text":"Reimer, P., Austin, W., Bard, E., Bayliss, ., Blackwell, P., Bronk Ramsey, C., . . . Talamo, S. (2020). IntCal20 Northern Hemisphere Radiocarbon Age Calibration Curve (0–55 cal kBP). Radiocarbon, 62(4), 725-757. doi:10.1017/RDC.2020.41","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/IntCal20.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmospheric North data for calibration of 14C age — IntCal20","text":"","code":"data(IntCal20) ## maybe str(IntCal20) ; head(IntCal20) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"function plots Lx/Tx values function regenerative dose, every selected aliquot sample.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"","code":"LT_RegenDose(   DATA,   Path,   FolderNames,   SampleNames = FolderNames,   Nb_sample,   BinPerSample = rep(1, Nb_sample),   SG = rep(TRUE, Nb_sample),   sepDP = c(\",\"),   nrow = 3L,   ncol = nrow )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"DATA list (required): list objects LT, sLT, ITimes, dLab, ddot_env, regDose, J, K, Nb_measurement, #' provided Generate_DataFile Generate_DataFile_MG combine_DataFiles.DATA can contain information one sample. Path character (required): path project folder (one used Generate_DataFile  Generate_DataFile_MG provide DATA) FolderNames character (required): vector names sub-folders containing BIN-files, used Generate_DataFile Generate_DataFile_MG generate DATA object. SampleNames character (default): Names samples. use one bin file per sample. Nb_sample integer (required): ID number ([1,Nb_sample]) sample selected plotting L/T function regenerative doses. Required DATA object contains information one sample. BinPerSample integer (default): integer vector (default): vector number BIN files per sample, used Generate_DataFile Generate_DataFile_MG generate DATA object. SG logical (default): vector set type measurement sample length(SG)=Nb_sample.sample number ID equal , SG[]=TRUE Single-grain OSL measurements, SG[]=FALSE Multi-grain OSL measurements. sepDP character (default): column separator DiscPos.csv file Disc.csv file. must separator samples, single-grain OSL measurements multi-grain OSL measurements. nrow integer (default): controls arrangement plots, number rows. Can set NULL. ncol integer (default): controls arrangement plots, number columns. Can set NULL.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"Lx/Tx plots; many plots selected aliquots DiscPos.csv file. 9 plots per page. interpolation.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"fill FolderNames BinPerSample, refer Detail section Generate_DataFile Generate_DataFile_MG function. well precise description input DATA.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"Claire Christophe, Sebastian Kreutzer, Anne Philippe, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"Christophe, C., Kreutzer, S., Philippe, ., Guérin, G., 2024. LT_RegenDose-deprecated(): Plots Lx/Tx function regenerative dose (DEPRECATED). : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/LT_RegenDose-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots Lx/Tx as a function of the regenerative dose (DEPRECATED) — LT_RegenDose-deprecated","text":"","code":"if (FALSE) { # \\dontrun{ ## load data file generated by the function Generate_DataFile data(DATA3,envir = environment()) path<- system.file(\"extdata/FER1\", \"\", package=\"BayLum\") folder=\"\" samplename <- \"FER1\" LT_RegenDose(  DATA = DATA3,  Path = path,  FolderNames = folder,  SampleNames = samplename,  Nb_sample = 1,  SG = FALSE) } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/MCMCsample.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","title":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","text":"MCMC samples posterior distribution \"\" age, \"D\" palaeodose \"sD\" dispersion equivalent doses around \"D\", data set GDB5.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/MCMCsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","text":"","code":"data(\"MCMCsample\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/MCMCsample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","text":"matric 6000 row tree column. first column matrice sampled posterior distribution paramete D first column matrice sampled posterior distribution paramete D sD first column matrice sampled posterior distribution paramete sD","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/MCMCsample.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","text":"Tribolo, C., Asrat, ., Bahain, J. J., Chapon, C., Douville, E., Fragnol, C., Hernandez, M., Hovers, E., Leplongeon, .,  Martin, L,  Pleurdeau, D,  Pearson, O ,  Puaud, S,  Assefa, Z. (2017). Across Gap: Geochronological Sedimentological Analyses Late Pleistocene-Holocene Sequence Goda Buticha, Southeastern Ethiopia. PloS one, 12(1), e0169418.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/MCMCsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMC sample from the posterior distribution of the dataset GDB5  — MCMCsample","text":"","code":"data(MCMCsample) ## maybe str(MCMCsample) ; plot(MCMCsample[,1],type=\"l\") ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine13.html","id":null,"dir":"Reference","previous_headings":"","what":"Marine data for calibration of 14C age — Marine13","title":"Marine data for calibration of 14C age — Marine13","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data marine_CalC14 allows calibration hypothetical \"global\" marine reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marine data for calibration of 14C age — Marine13","text":"","code":"data(\"Marine13\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine13.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Marine data for calibration of 14C age — Marine13","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine13.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Marine data for calibration of 14C age — Marine13","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B, Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine13.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marine data for calibration of 14C age — Marine13","text":"","code":"data(Marine13) ## maybe str(Marine13) ; head(Marine13) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine20.html","id":null,"dir":"Reference","previous_headings":"","what":"Marine data for calibration of 14C age — Marine20","title":"Marine data for calibration of 14C age — Marine20","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data marine_CalC14 allows calibration hypothetical \"global\" marine reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marine data for calibration of 14C age — Marine20","text":"","code":"data(\"Marine20\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine20.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Marine data for calibration of 14C age — Marine20","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine20.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Marine data for calibration of 14C age — Marine20","text":"Heaton, T., Köhler, P., Butzin, M., Bard, E., Reimer, R., Austin, W., . . . Skinner, L. (2020). Marine20—Marine Radiocarbon Age Calibration Curve (0–55,000 cal BP). Radiocarbon, 62(4), 779-820. doi:10.1017/RDC.2020.68","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Marine20.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marine data for calibration of 14C age — Marine20","text":"","code":"data(Marine20) ## maybe str(Marine20) ; head(Marine20) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelC14.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","title":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","text":"list models C14 data define likelyhood JAGS models.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelC14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","text":"","code":"data(\"ModelC14\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelC14.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","text":"list contains: full model considering error calibration curve. naive model considering error calibration curve.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelC14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B,Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887. Hogg AG, Hua Q, Blackwell PG, Niu M, Buck CE, Guilderson TP, Heaton TJ, Palmer JG, Reimer PJ, Reimer RW, Turney CSM, Zimmerman SRH. 2013. SHCal13 Southern Hemisphere calibration, 0-50000 years cal BP. Radiocarbon 55(4):1889-1903","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelC14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood of C14 samples for JAGS models use in Age_OSLC14 — ModelC14","text":"","code":"data(Model_AgeC14) writeLines(Model_AgeC14$full) #> model{ #>   # vraisemblance #>   for(i in 1:N){ #>     X[i] ~ dnorm(mu[i], prec[i]) #>     mu[i] <- interp.lin(Age[i], xTableauCalib, yTableauCalib) #>     Z[i]~dcat(c(0.1,0.9)) #>     err[i] <- interp.lin(Age[i], xTableauCalib, zTableauCalib) #>     prec[i] <- 1/(alpha[i]^(-Z[i]+2)*(pow(sigma[i],2)+pow(err[i],2))) #>   } #>   # a priori #>   Age[1]~dunif(xbound[1],xbound[2]) #>   invalpha[1]~dgamma(3,4) #>   alpha[1]<-1/invalpha[1] #>   for(j in 2:N){ #>     amin[j]<-max(StratiConstraints[1:j,j]*c(xbound[(2*(j-1)+1)],Age[1:(j-1)])) #>     Age[j]~dunif(amin[j],xbound[2*j]) #>     invalpha[j]~dgamma(3,4) #>     alpha[j]<-1/invalpha[j] #>     } #>   }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"list models OSL data define likelyhood JAGS models.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"","code":"data(\"ModelOSL\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"list contains: AgesMultiCS2_EXPLIN list 4 models consider saturating exponential plus linear growth. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXP list 4 models consider saturating exponential growth. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXPZO list 4 models consider saturating exponential plus linear growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXPLINZO list 4 models consider saturating exponential growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"different distibutions describe equivalent dose values around palaeodose : cauchy Cauchy distribution postition parameter equal palaeodose sample gaussian Gaussian distribution mean equal palaeodose sample lognormal_A log-normal distribution mean Average equal palaeodose sample lognormal_M log-normal distribution Median equal palaeodose sample information refer function AgeS_Computation, section Details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"Plummer, M. (2003). JAGS: program analysis Bayesian graphical models using Gibbs sampling. Proceedings 3rd international workshop distributed statistical computing, volume 124, page 125. Technische Universit Wien, Austria. Plummer, M. (2015). JAGS Version 4.0. 0 user manual.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelOSL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood of OSL samples for JAGS models use in Age_OSLC14 — ModelOSL","text":"","code":"data(ModelOSL) ## The JAGS model of the likelyhood for a saturating exponential plus linear growth ## (a function of the type \\code{f(x)=a(1-exp(-x/b))+cx+d}) ## and a gaussian distribution of equivalent doses around the palaeodose: writeLines(ModelOSL$AgesMultiOSL_EXPLIN$gaussian) #> D~dmnorm(mu,omega) #> for(i1 in ind_OSL){ #>   sD[CS_OSL[i1]]~dt(0,pow(0.16*D[CS_OSL[i1]],-2),1)T(0,) #>   pD[CS_OSL[i1]]<-pow(sD[CS_OSL[i1]],-2) #>   mu[CS_OSL[i1]]<-A[i1]*ddot[CS_OSL[i1]] #>   for(i2 in ind_OSL){ #>     Sigma[CS_OSL[i1],CS_OSL[i2]]=A[i1]*A[i2]*Gamma[CS_OSL[i1],CS_OSL[i2]] #>   } #> } #> omega<-inverse(Sigma) #>  #> # Likelihood: #> for(i in ind_OSL){ #>   for(bf in (CSBinPerSample[CS_OSL[i]]-BinPerSample[CS_OSL[i]]+1):(CSBinPerSample[CS_OSL[i]])){ #>     for(j in 1:J[bf]){ #>       # prior on growth function #>       xa[(index[bf]+j)]~dnorm(6.5,1/(9.2^2))T(0,) #>       xb[(index[bf]+j)]~dnorm(50,1/(1000^2))T(0,) #>       xc[(index[bf]+j)]~dnorm(0.002,1/(0.01^2))T(0,) #>       xd[(index[bf]+j)]~dnorm(0.5,1/(2.5^2))T(-xa[(index[bf]+j)],) #>       sigmaf[(index[bf]+j)]~dexp(20) #>        #>       De[(index[bf]+j),1]~dnorm(D[CS_OSL[i]],pD[CS_OSL[i]]) #>       # #>       xprecision[(index[bf]+j),1]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),1]^2) ##<-- ???? sN[j,1]^2 ???? #>       N[(index[bf]+j),1]~dnorm(xQ[(index[bf]+j),1],xprecision[(index[bf]+j),1]) #>       xQ[(index[bf]+j),1]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),1]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),1]+xd[(index[bf]+j)] #>        #>       for(k in 2:K[bf]){ #>         xprecision[(index[bf]+j),k]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),k]^2) #>         N[(index[bf]+j),k]~dnorm(xQ[(index[bf]+j),k],xprecision[(index[bf]+j),k]) #>         xQ[(index[bf]+j),k]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),k]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),k]+xd[(index[bf]+j)] #>         De[(index[bf]+j),k]<-IT[(index[bf]+j),(k-1)]*sDlab[bf] #>       } #>     } #>   } #> }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelPrior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","title":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","text":"list define prior JAGS models, taking acount OSL data C14 data stratigraphic constraint. difficulty fact cases different. youngest sample can C14 well OSL sample. resolve problem consider diferent cases thanks list.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelPrior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","text":"","code":"data(\"ModelPrior\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelPrior.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","text":"list contains: Sample1_C14 model considering youngest sample C14 sample Sample1_OSL model considering youngest sample OSL sample C14_OSL model considering second sample C14 sample OSL_C14 model considering second sample OSL sample C14 model considering last sample C14 sample OSL model considering last sample OSL sample","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelPrior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","text":"Plummer, M. (2003). JAGS: program analysis Bayesian graphical models using Gibbs sampling. Proceedings 3rd international workshop distributed statistical computing, volume 124, page 125. Technische Universit Wien, Austria. Plummer, M. (2015). JAGS Version 4.0. 0 user manual.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/ModelPrior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior for JAGS models use in Age_OSLC14 — ModelPrior","text":"","code":"data(ModelPrior) ## ModelPrior[[OSL]] writeLines(ModelPrior$OSL) #>  #>       # donnee OSL #>       kk<-k+1 #>       for(i in (ind_change[2*q+1]+1):ind_change[2*(q+1)]){ #>       u[CS_OSL[i]]~dunif(0,1) #>       CS[i]<-max(StratiConstraints[(1:i),i]*c(xbound[(2*i-1)],A[1:(i-1)])) #>       A[i]<-exp(u[CS_OSL[i]]*log(xbound[2*(i-1)]/CS[i])+log(CS[i])) #>       } #>"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS models use in Age_Computation — Model_Age","title":"JAGS models use in Age_Computation — Model_Age","text":"list JAGS models use Bayesian analysis OSL age one sample. models various growth curves various distrubution describe equivalent dose distribution around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS models use in Age_Computation — Model_Age","text":"","code":"data(\"Model_Age\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JAGS models use in Age_Computation — Model_Age","text":"list contains: AgeMultiBF_EXPLIN list 4 models consider saturating exponential plus linear growth. 4 models different distribution describe equivalent dose values around palaeodose. AgeMultiBF_EXP list 4 models consider saturating exponential growth. 4 models different distribution describe equivalent dose values around palaeodose. AgeMultiBF_EXPZO list 4 models consider saturating exponential plus linear growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose. AgeMultiBF_EXPLINZO list 4 models consider saturating exponential growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JAGS models use in Age_Computation — Model_Age","text":"different distibutions describe equivalent dose values around palaeodose : cauchy Cauchy distribution postition parameter equal palaeodose sample gaussian Gaussian distribution mean equal palaeodose sample lognormal_A log-normal distribution mean Average equal palaeodose sample lognormal_M log-normal distribution Median equal palaeodose sample information refer function Age_Computation, section Details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JAGS models use in Age_Computation — Model_Age","text":"Plummer, M. (2003). JAGS: program analysis Bayesian graphical models using Gibbs sampling. Proceedings 3rd international workshop distributed statistical computing, volume 124, page 125. Technische Universit Wien, Austria. Plummer, M. (2015). JAGS Version 4.0. 0 user manual.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS models use in Age_Computation — Model_Age","text":"","code":"data(Model_Age) ## Terminal print ## The JAGS model for a saturating exponential plus linear growth ## (a function of the type \\code{f(x)=a(1-exp(-x/b))+cx+d}) ## and a gaussian distribution of equivalent doses around the palaeodose: writeLines(Model_Age$AgeMultiBF_EXPLIN$cauchy) #> model { #>     D~dnorm(A*ddot,omega) #>     sD~dt(0,pow(0.16*D,-2),1)T(0,)#dgamma(0.01,0.01) #>     pD<-pow(sD,-2) #>  #>     # Likelihood: #>     for(bf in 1:BinPerSample){ #>       for(j in 1:J[bf]){ #>         # prior on growth function #>         xa[(index[bf]+j)]~dnorm(6.5,1/(9.2^2))T(0,) #>         xb[(index[bf]+j)]~dnorm(50,1/(1000^2))T(0,) #>         xc[(index[bf]+j)]~dnorm(0.002,1/(0.01^2))T(0,) #>         xd[(index[bf]+j)]~dnorm(0.5,1/(2.5^2))T(-xa[(index[bf]+j)],) #>         sigmaf[(index[bf]+j)]~dexp(20) #>  #>         De[(index[bf]+j),1]~dt(D,pD,1) #>         # #>         xprecision[(index[bf]+j),1]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),1]^2) ##<-- ???? sN[j,1]^2 ???? #>         N[(index[bf]+j),1]~dnorm(xQ[(index[bf]+j),1],xprecision[(index[bf]+j),1]) #>         xQ[(index[bf]+j),1]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),1]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),1]+xd[(index[bf]+j)] #>  #>         for(k in 2:K[bf]){ #>           xprecision[(index[bf]+j),k]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),k]^2) #>           N[(index[bf]+j),k]~dnorm(xQ[(index[bf]+j),k],xprecision[(index[bf]+j),k]) #>           xQ[(index[bf]+j),k]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),k]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),k]+xd[(index[bf]+j)] #>           De[(index[bf]+j),k]<-IT[(index[bf]+j),(k-1)]*sDlab[bf] #>         } #>  #>       } #>     } #>     omega<-1/(A^2*Sigma) #>     u~dunif(0,1) #>     A<-exp(u*log(xbound[2]/xbound[1])+log(xbound[1])) #>   }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeC14.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS models use in AgeC14_Computation — Model_AgeC14","title":"JAGS models use in AgeC14_Computation — Model_AgeC14","text":"list JAGS models use Bayesian analysis C14 calibration age various sample. Stratigraphic relations can taken count calibrate C14 ages. ages take account data can outlier.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeC14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS models use in AgeC14_Computation — Model_AgeC14","text":"","code":"data(\"Model_AgeC14\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeC14.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JAGS models use in AgeC14_Computation — Model_AgeC14","text":"list contains: full model considering error calibration curve. naive model considering error calibration curve.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeC14.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JAGS models use in AgeC14_Computation — Model_AgeC14","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B,Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887. Hogg AG, Hua Q, Blackwell PG, Niu M, Buck CE, Guilderson TP, Heaton TJ, Palmer JG, Reimer PJ, Reimer RW, Turney CSM, Zimmerman SRH. 2013. SHCal13 Southern Hemisphere calibration, 0-50000 years cal BP. Radiocarbon 55(4):1889-1903","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeC14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS models use in AgeC14_Computation — Model_AgeC14","text":"","code":"data(Model_AgeC14) writeLines(Model_AgeC14$full) #> model{ #>   # vraisemblance #>   for(i in 1:N){ #>     X[i] ~ dnorm(mu[i], prec[i]) #>     mu[i] <- interp.lin(Age[i], xTableauCalib, yTableauCalib) #>     Z[i]~dcat(c(0.1,0.9)) #>     err[i] <- interp.lin(Age[i], xTableauCalib, zTableauCalib) #>     prec[i] <- 1/(alpha[i]^(-Z[i]+2)*(pow(sigma[i],2)+pow(err[i],2))) #>   } #>   # a priori #>   Age[1]~dunif(xbound[1],xbound[2]) #>   invalpha[1]~dgamma(3,4) #>   alpha[1]<-1/invalpha[1] #>   for(j in 2:N){ #>     amin[j]<-max(StratiConstraints[1:j,j]*c(xbound[(2*(j-1)+1)],Age[1:(j-1)])) #>     Age[j]~dunif(amin[j],xbound[2*j]) #>     invalpha[j]~dgamma(3,4) #>     alpha[j]<-1/invalpha[j] #>     } #>   }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS models use in AgeS_Computation — Model_AgeS","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"list JAGS models use Bayesian analysis OSL age various samples. models various growth curves various distrubution describe equivalent dose distribution around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"","code":"data(\"Model_AgeS\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"list contains: AgesMultiCS2_EXPLIN list 4 models consider saturating exponential plus linear growth. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXP list 4 models consider saturating exponential growth. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXPZO list 4 models consider saturating exponential plus linear growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose. AgesMultiCS2_EXPLINZO list 4 models consider saturating exponential growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"different distibutions describe equivalent dose values around palaeodose : cauchy Cauchy distribution postition parameter equal palaeodose sample gaussian Gaussian distribution mean equal palaeodose sample lognormal_A log-normal distribution mean Average equal palaeodose sample lognormal_M log-normal distribution Median equal palaeodose sample information refer function AgeS_Computation, section Details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"Plummer, M. (2003). JAGS: program analysis Bayesian graphical models using Gibbs sampling. Proceedings 3rd international workshop distributed statistical computing, volume 124, page 125. Technische Universit Wien, Austria. Plummer, M. (2015). JAGS Version 4.0. 0 user manual.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_AgeS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS models use in AgeS_Computation — Model_AgeS","text":"","code":"data(Model_AgeS) ## The JAGS model for a saturating exponential plus linear growth ## (a function of the type \\code{f(x)=a(1-exp(-x/b))+cx+d}) ## and a gaussian distribution of equivalent doses around the palaeodose: writeLines(Model_AgeS$AgesMultiCS2_EXP$gaussian) #> model { #>  #>   D~dmnorm(mu,omega) #>   for(i1 in 1:I){ #>   sD[i1]~dt(0,pow(0.16*D[i1],-2),1)T(0,) #>   pD[i1]<-pow(sD[i1],-2) #>   mu[i1]<-A[i1]*ddot[i1] #>   for(i2 in 1:I){ #>   Sigma[i1,i2]=A[i1]*A[i2]*Gamma[i1,i2] #>   } #>   } #>   omega<-inverse(Sigma) #>  #>   # Likelihood: #>   for(i in 1:I){ #>   for(bf in (CSBinPerSample[i]-BinPerSample[i]+1):(CSBinPerSample[i])){ #>   for(j in 1:J[bf]){ #>   # prior on growth function #>   xa[(index[bf]+j)]~dnorm(6.5,1/(9.2^2))T(0,) #>   xb[(index[bf]+j)]~dnorm(50,1/(1000^2))T(0,) #>   xd[(index[bf]+j)]~dnorm(0.5,1/(2.5^2))T(-xa[(index[bf]+j)],) #>   sigmaf[(index[bf]+j)]~dexp(20) #>  #>   De[(index[bf]+j),1]~dnorm(D[i],pD[i]) #>   # #>   xprecision[(index[bf]+j),1]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),1]^2) ##<-- ???? sN[j,1]^2 ???? #>   N[(index[bf]+j),1]~dnorm(xQ[(index[bf]+j),1],xprecision[(index[bf]+j),1]) #>   xQ[(index[bf]+j),1]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),1]/xb[(index[bf]+j)]))+xd[(index[bf]+j)] #>  #>   for(k in 2:K[bf]){ #>   xprecision[(index[bf]+j),k]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),k]^2) #>   N[(index[bf]+j),k]~dnorm(xQ[(index[bf]+j),k],xprecision[(index[bf]+j),k]) #>   xQ[(index[bf]+j),k]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),k]/xb[(index[bf]+j)]))+xd[(index[bf]+j)] #>   De[(index[bf]+j),k]<-IT[(index[bf]+j),(k-1)]*sDlab[bf] #>   } #>   } #>   } #>   } #>  #>   Atemp[1]=xbound[1] #>   # i0=2 #>   u[1]~dunif(0,1) #>   CS[1]=xbound[1] #>   Atemp[2]<-exp(u[1]*log(xbound[2]/CS[1])+log(CS[1])) #>   # i0>2 #>   for(i0 in 3:(I+1)){ #>   u[i0-1]~dunif(0,1) #>   CS[i0-1]=max(StratiConstraints[(1:(i0-1)),(i0-1)]*c(xbound[(2*(i0-1)-1)],Atemp[2:(i0-1)])) #>   Atemp[i0]<-exp(u[(i0-1)]*log(xbound[2*(i0-1)]/CS[i0-1])+log(CS[i0-1])) #>   } #>   A=Atemp[2:(I+1)] #>   }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":null,"dir":"Reference","previous_headings":"","what":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"list JAGS models use Bayesian analysis OSL palaeodose one various samples. models various growth curves various distrubution describe equivalent dose distribution around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"","code":"data(\"Model_Palaeodose\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"list contains: PalaeodosesMultiBF_EXPLIN list 4 models consider saturating exponential plus linear growth. 4 models different distribution describe equivalent dose values around palaeodose. PalaeodosesMultiBF_EXP list 4 models consider saturating exponential growth. 4 models different distribution describe equivalent dose values around palaeodose. PalaeodosesMultiBF_EXPZO list 4 models consider saturating exponential plus linear growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose. PalaeodosesMultiBF_EXPLINZO list 4 models consider saturating exponential growth fitting origin. 4 models different distribution describe equivalent dose values around palaeodose.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"different distibutions describe equivalent dose values around palaeodose : cauchy Cauchy distribution postition parameter equal palaeodose sample gaussian Gaussian distribution mean equal palaeodose sample lognormal_A log-normal distribution mean Average equal palaeodose sample lognormal_M log-normal distribution Median equal palaeodose sample information refer function Palaeodose_Computation, section Details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"Plummer, M. (2003). JAGS: program analysis Bayesian graphical models using Gibbs sampling. Proceedings 3rd international workshop distributed statistical computing, volume 124, page 125. Technische Universit Wien, Austria. Plummer, M. (2015). JAGS Version 4.0. 0 user manual.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Model_Palaeodose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JAGS models use in Palaeodose_Computation — Model_Palaeodose","text":"","code":"data(Model_Palaeodose) writeLines(Model_Palaeodose$PalaeodosesMultiBF_EXPLIN$gaussian) #> model { #>  #>   for(i0 in 1:I){ #>   D[i0]~dunif(xbound[1],xbound[2]) #>   sD[i0]~dt(0,pow(0.16*D[i0],-2),1)T(0,) #>   pD[i0]<-pow(sD[i0],-2) #>   } #>  #>   # Likelihood: #>   for(i in 1:I){ #>   for(bf in (CSBinPerSample[i]-BinPerSample[i]+1):(CSBinPerSample[i])){ #>   for(j in 1:J[bf]){ #>   # prior on growth function #>   xa[(index[bf]+j)]~dnorm(6.5,1/(9.2^2))T(0,) #>   xb[(index[bf]+j)]~dnorm(50,1/(1000^2))T(0,) #>   xc[(index[bf]+j)]~dnorm(0.002,1/(0.01^2))T(0,) #>   xd[(index[bf]+j)]~dnorm(0.5,1/(2.5^2))T(-xa[(index[bf]+j)],) #>   sigmaf[(index[bf]+j)]~dexp(20) #>  #>   De[(index[bf]+j),1]~dnorm(D[i],pD[i]) #>   # #>   xprecision[(index[bf]+j),1]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),1]^2) ##<-- ???? sN[j,1]^2 ???? #>   N[(index[bf]+j),1]~dnorm(xQ[(index[bf]+j),1],xprecision[(index[bf]+j),1]) #>   xQ[(index[bf]+j),1]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),1]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),1]+xd[(index[bf]+j)] #>  #>   for(k in 2:K[bf]){ #>   xprecision[(index[bf]+j),k]<-1/(sigmaf[(index[bf]+j)]^2+sN[(index[bf]+j),k]^2) #>   N[(index[bf]+j),k]~dnorm(xQ[(index[bf]+j),k],xprecision[(index[bf]+j),k]) #>   xQ[(index[bf]+j),k]<-xa[(index[bf]+j)]*(1-exp(-De[(index[bf]+j),k]/xb[(index[bf]+j)]))+xc[(index[bf]+j)]*De[(index[bf]+j),k]+xd[(index[bf]+j)] #>   De[(index[bf]+j),k]<-IT[(index[bf]+j),(k-1)]*sDlab[bf] #>   } #>   } #>   } #>   } #>  #>   }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"function computes palaeodose (Gy) one various samples according model developed Combes et al (2015), based output Generate_DataFile Generate_DataFile_MG using combine_DataFiles. Samples, data avalilable several BIN files, can analysed. Single-grain Multi-grain OSL measurements can analysed simultaneouly.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"","code":"Palaeodose_Computation(   DATA,   SampleNames,   Nb_sample,   BinPerSample = rep(1, Nb_sample),   SavePdf = FALSE,   OutputFileName = c(\"MCMCplot\"),   OutputFilePath = c(\"\"),   SaveEstimates = FALSE,   OutputTableName = c(\"DATA\"),   OutputTablePath = c(\"\"),   LIN_fit = TRUE,   Origin_fit = FALSE,   distribution = c(\"cauchy\"),   Iter = 50000,   t = 5,   n.chains = 3 )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"DATA list objects: LT, sLT, ITimes, dLab, ddot_env, regDose, J, K, Nb_measurement, provided Generate_DataFile Generate_DataFile_MG. DATA contains information one sample. SampleNames character vector: names sample. length vector equal Nb_sample. Nb_sample integer: number samples. BinPerSample integer vector (default): vector number BIN files per sample. length vector equal Nb_sample. BinPerSample[] corresponds number BIN files sample whose number ID equal . information fill vector, refer details Generate_DataFile Generate_DataFile_MG. SavePdf boolean (default): TRUE save graph pdf file named OutputFileName folder OutputFilePath. OutputFileName character (default): name pdf files generated function. OutputFilePath character (default): path pdf files generated function. SaveEstimates boolean (default): TRUE save Bayes estimates credible interval level 68 csv table named OutputFileName folder OutputFilePath. OutputTableName character (default): name table generated function SaveEstimates=TRUE. OutputTablePath character (default): path table generated function SaveEstimates=TRUE. LIN_fit logical (default): TRUE (default) allows linear component, top (default) saturating exponential curve, fitting dose response curves. Please see details informations proposed dose response curves. Origin_fit logical (default): TRUE, forces dose response curves pass origin. Please see details informations proposed growth curves. distribution character (default): type distribution defines individual equivalent dose values distributed around palaeodose. Allowed inputs \"cauchy\", \"gaussian\", \"lognormal_A\" \"lognormal_M\". Iter integer (default): number iterations MCMC computation (information see [rjags::jags.model]). t integer (default): 1 every t iterations MCMC considered sampling posterior distribution (information see [rjags::jags.model]). n.chains integer (default): number independent chains model (information see [rjags::jags.model]).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"NUMERICAL OUTPUT list containing following objects: Sampling corresponds sample posterior distributions  palaeodose equivalent dose dispersion parameters (Gy). Model_GrowthCurve, stating dose response fitting option chosen; Distribution, stating distribution chosen model dispersion  individual equivalent dose values around palaeodose sample. Gelman Rubin test convergency: prints result Gelman Rubin test convergency palaeodose equivalent dose dispersion parameters sample. result close one expected. addition, user must visually assess convergency trajectories looking pdf file generated function (see PLOT OUTPUT informations). convergencies (Gelman Rubin test plot checking) satisfactory, user can consider printed estimates valid. Otherwise, user may try increasing number MCMC interations (Iter) reach convergency. Credible intervals Bayes estimates: prints Bayes esitmates, credible intervals 95 palaeodose equivalent dose dispersion parameters sample. PLOT OUTPUT MCMC trajectories graph MCMC trajectories posterior distributions palaeodose equivalent dose dispersion parameters displayed, one page per sample.  first line figure correponds palaeodose parameter second equivalent dose dispersion parameter. line, plot left represents MCMC trajectories, one right posterior distribution parameter. Summary palaeodose estimates: plot credible intervals Bayes estimate sample palaeodose graph. give result publication, recommend give Bayes estimate parameters well credible interval 95","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"** Option growth curves ** Age_Computation AgeS_Computation, user can choose 4 dose response curves: Saturating exponential plus linear growth (PalaeodosesMultiBF_EXPLIN): x IR+, f(x)=(1-exp(-x/b))+cx+d; select LIN_fit=TRUE Origin_fit=FALSE Saturating exponential growth (PalaeodosesMultiBF_EXP): x IR+, f(x)=(1-exp(-x/b))+d; select LIN_fit=FALSE Origin_fit=FALSE Saturating exponential plus linear growth fitting origin (PalaeodosesMultiBF_EXPLINZO): x IR+, f(x)=(1-exp(-x/b))+cx; select LIN_fit=TRUE Origin_fit=TRUE Saturating exponential growth fitting origin (PalaeodosesMultiBF_EXPZO): x IR+, f(x)=(1-exp(-x/b)); select LIN_fit=FALSE Origin_fit=TRUE ** Option equivalent dose distribution around palaeodose ** use can choose : cauchy: Cauchy distribution location parameter equal palaeodose sample gaussian: Gaussian distribution mean equal palaeodose sample lognormal_A: log-normal distribution mean Average equal palaeodose sample lognormal_M: log-normal distribution Median equal palaeodose sample","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"Please note initial values MCMC currently chains since rely automatic initial value generation JAGS. optimal changed future. However, affect quality age estimates chains converged.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"Christophe, C., Kreutzer, S., Philippe, ., Guérin, G., 2024. Palaeodose_Computation(): Bayesian analysis palaeodose estimation various samples. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"Combes, B., Philippe, ., Lanos, P., Mercier, N., Tribolo, C., Guerin, G., Guibert, P., Lahaye, C., 2015. Bayesian central equivalent dose model optically stimulated luminescence dating. Quaternary Geochronology 28, 62-70. doi:10.1016/j.quageo.2015.04.001","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"Claire Christophe, Sebastian Kreutzer, Anne Philippe, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/Palaeodose_Computation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayesian analysis for the palaeodose estimation of various samples — Palaeodose_Computation","text":"","code":"## Load data data(DATA1,envir = environment()) ## Palaeodose computation of samples GDB3 P=Palaeodose_Computation(DATA=DATA1,Nb_sample=1,SampleNames=c(\"GDB5\"),Iter=100) #> Compiling model graph #>    Resolving undeclared variables #>    Allocating nodes #> Graph information: #>    Observed stochastic nodes: 505 #>    Unobserved stochastic nodes: 608 #>    Total graph size: 7216 #>  #> Initializing model #>  #> Warning: [plot_MCMC()] 'n.iter' out of range, reset to number of observations  #>  #>  #> >> Results of the Gelman and Rubin criterion of convergence << #> ---------------------------------------------- #>  Sample name:  GDB5  #> --------------------- #> \t\t Point estimate Uppers confidence interval #> D_GDB5 \t 1.96 \t\t 4.94  #> sD_GDB5 \t 1.78 \t\t 3.61  #>  #>  #> --------------------------------------------------------------------------------------------------- #>  *** WARNING: The following information are only valid if the MCMC chains have converged  *** #> --------------------------------------------------------------------------------------------------- #>  #>  #>  #> >> Bayes estimates of Age, Palaeodose and its dispersion for each sample and credible interval << #> ---------------------------------------------- #>  Sample name:  GDB5  #> --------------------- #> Parameter \t Bayes estimate \t  Credible interval  #> D_GDB5 \t 111.545  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 101 \t\t 135  #> \t\t\t\t at level 68% \t 105 \t\t 116  #>  #> Parameter \t Bayes estimate \t  Credible interval  #> sD_GDB5 \t 16.879  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 10 \t\t 27  #> \t\t\t\t at level 68% \t 11 \t\t 18  #>  #> ----------------------------------------------"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"function helps define stratigraphic relation samples using questions. output function can used function AgeS_Computation.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"","code":"SCMatrix(DATA = NULL, Nb_sample, SampleNames)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"DATA BayLum.list (default): Object class BayLum.list, provided parameters longer mandatory. Nb_sample integer (required): sample number, DATA provided, input required SampleNames character (required): sample names, DATA provided, input required","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"Returns matrix summarise ordered relation samples. matrix can integrate AgeS_Computation function. refer detail AgeS_Computation information concerning matrix.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"function ask sample younger sample j construct stratigraphic constrain matrix.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"Claire Christophe, Anne Philippe, Guillaume Guérin, Sebastian Kreutzer","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"Christophe, C., Philippe, ., Guérin, G., Kreutzer, S., 2024. SCMatrix(): Construct Stratigraphic Constrain Matrix Interactively. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SCMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the Stratigraphic Constrain Matrix Interactively — SCMatrix","text":"","code":"if (FALSE) { # \\dontrun{ SCMatrix(  Nb_sample = 2,  SampleNames = c(\"sample1\",\"sample2\")) } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"Construct stratigraphic matrix used functions AgeS_Computation AgeC14_Computation samples ordered increasing age.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"","code":"SC_Ordered(Nb_sample)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"Nb_sample integer (required): number samples; alternatively object class BayLum.list can provided input (produced create_DataFile)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"Stratigraphic matrix sample ordered increasing order. matrix can integrated function AgeS_Computation. Please see AgeS_Computation information matrix.","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"Claire Christophe, Anne Philippe, Sebastian Kreutzer, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., 2024. SC_Ordered(): Create Stratigraphically Ordered Sample Matrix. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SC_Ordered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Stratigraphically Ordered Sample Matrix — SC_Ordered","text":"","code":"SC <- SC_Ordered(Nb_sample = 3)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal13.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmospheric South data for calibration of 14C age — SHCal13","title":"Atmospheric South data for calibration of 14C age — SHCal13","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data AtmosphericSouth_CalC14 allows calibration mid-latitude Southern Hemisphere atmospher reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmospheric South data for calibration of 14C age — SHCal13","text":"","code":"data(\"SHCal13\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal13.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmospheric South data for calibration of 14C age — SHCal13","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years (ky)  befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal13.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Atmospheric South data for calibration of 14C age — SHCal13","text":"Reimer PJ, Bard E, Bayliss , Beck JW, Blackwell PC, Bronl Ramsey C, Buck CE, Cheng H, Edwards RL, Friedrich M, Grootes PM, Guilderson TP, Haflidason H, Hajdas , Hatte C, Heaton TJ, Hoffmann DL, Hogg AG, Hughen KA, Kaiser KF, Kromer B, Manning SW, Niu M, Reimer RW, Richards DA, Scott EM, Southon JR, Staff RA, Turney CSM, van der Plicht J. 2013. IntCal13 ans Marine13 radiocarbon age calibration curves 0-50000 years cal BP. Radiocarbon 55(4)=1869-1887.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal13.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmospheric South data for calibration of 14C age — SHCal13","text":"","code":"data(SHCal13) ## maybe str(SHCal13) ; head(SHCal13) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal20.html","id":null,"dir":"Reference","previous_headings":"","what":"Atmospheric South data for calibration of 14C age — SHCal20","title":"Atmospheric South data for calibration of 14C age — SHCal20","text":"14C years equal calendar years atmospheric 14C concentration varies time. Hence, data AtmosphericSouth_CalC14 allows calibration mid-latitude Southern Hemisphere atmospher reservoir.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Atmospheric South data for calibration of 14C age — SHCal20","text":"","code":"data(\"SHCal20\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal20.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Atmospheric South data for calibration of 14C age — SHCal20","text":"data frame 3 variables. CAL.BP numeric vector correpondig calendar years (ky)  befor present X14C.age numeric vector correponding 14C age Error numeric vector correponding error arround 14C age measurement","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal20.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Atmospheric South data for calibration of 14C age — SHCal20","text":"Hogg, ., Heaton, T., Hua, Q., Palmer, J., Turney, C., Southon, J., . . . Wacker, L. (2020). SHCal20 Southern Hemisphere Calibration, 0–55,000 Years cal BP. Radiocarbon, 62(4), 759-778. doi:10.1017/RDC.2020.59","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/SHCal20.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Atmospheric South data for calibration of 14C age — SHCal20","text":"","code":"data(SHCal20) ## maybe str(SHCal20) ; head(SHCal20) ..."},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine objects — combine_DataFiles","title":"Combine objects — combine_DataFiles","text":"Combine objects generated Generate_DataFile Generate_DataFile_MG","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine objects — combine_DataFiles","text":"","code":"combine_DataFiles(...)  Concat_DataFile(...)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine objects — combine_DataFiles","text":"... list objects generated Generate_DataFile Generate_DataFile_MG","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine objects — combine_DataFiles","text":"nested list combining input objects.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine objects — combine_DataFiles","text":"function allows combine data already generated Generate_DataFile Generate_DataFile_MG. number input objects limited function works similar standard base R function c(), preserves particular structure objects imported generated 'BayLum'. elements combined list element names. Combining data rather useful two scenarios: data already imported treated stored RData-files. Using function combine_DataFiles() significantly speed processing time, simultaneous analysis single multi-grain OSL measurements.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Combine objects — combine_DataFiles","text":"0.1.1","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine objects — combine_DataFiles","text":"Sebastian Kreutzer, IRAMAT-CRP2A, UMR 5060, CNRS - Université Bordeaux Montaigne (France), adapting idea function 'Concat_DataFile()' Claire Christophe.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Combine objects — combine_DataFiles","text":"Kreutzer, S., Christophe, C., 2024. combine_DataFiles(): Combine objects. Function version 0.1.1. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/combine_DataFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine objects — combine_DataFiles","text":"","code":"# load data files data(DATA1,envir = environment()) data(DATA2,envir = environment())  #combine objects DATA3 <- combine_DataFiles(DATA1, DATA2) str(DATA3) #> List of 11 #>  $ LT            :List of 2 #>   ..$ : num [1:101, 1:6] 5.66 6.9 4.05 3.43 4.97 ... #>   ..$ : num [1:188, 1:6] 4.54 2.73 2.54 2.27 1.48 ... #>  $ sLT           :List of 2 #>   ..$ : num [1:101, 1:6] 0.373 0.315 0.245 0.181 0.246 ... #>   ..$ : num [1:188, 1:6] 0.333 0.386 0.128 0.171 0.145 ... #>  $ ITimes        :List of 2 #>   ..$ : num [1:101, 1:5] 160 160 160 160 160 160 160 160 160 160 ... #>   ..$ : num [1:188, 1:5] 40 40 40 40 40 40 40 40 40 40 ... #>  $ dLab          : num [1:2, 1:2] 1.53e-01 5.89e-05 1.53e-01 5.89e-05 #>  $ ddot_env      : num [1:2, 1:2] 2.26 0.0617 2.512 0.0563 #>  $ regDose       :List of 2 #>   ..$ : num [1:101, 1:5] 24.6 24.6 24.6 24.6 24.6 ... #>   ..$ : num [1:188, 1:5] 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 6.14 ... #>  $ J             : num [1:2] 101 188 #>  $ K             : num [1:2] 5 5 #>  $ Nb_measurement: num [1:2] 14 14 #>  $ SampleNames   : chr [1:2] \"samp 1\" \"samp 1\" #>  $ Nb_sample     : num 2 #>  - attr(*, \"originator\")= chr \"create_DataFile\""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input data for subsequent BayLum Analysis — create_DataFile","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"function pre-processes input data BIN/BINX file, XSYG files Luminescence::RLum.Analysis objects 'BayLum'. parameters modelling controlled supplied YAML configuration file (please read package vignette).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"","code":"create_DataFile(config_file, verbose = TRUE)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"config_file character (required): path YAML configuration file; alternatively config_file can list similar R representation imported YAML file. enables -fly modifications verbose logical (default): enable/disable terminal feedback","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"Returns list can processed modelling functions 'BayLum' LT (one list per sample); list contains L/T values corresponding sample; sLT (one list per sample); list contains uncertainties L/T values corresponding sample; ITimes (one list per sample); list contains irradiation time values corresponding sample; dLab, matrix containing line , laboratory dose rate variance sample ; ddot_env, matrix containing line , environmental dose rate variance (excluding common error terms) sample ; regDose (one list per sample); list contains regenerated doses; J, vector giving, BIN file, number aliquots selected analysis; K, vector giving, BIN file, number regenerative doses SAR protocol; Nb_measurement, vector giving, BIN file, number measurements; SampleNames, character vector sample names; Nb_sample, number samples dataset","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"function uses single configuration file based YAML format operates two modes: (1) YAML file contains path files function attempts import . case, files must thoroughly prepared (e.g., strictly follow SAR protocol etc.). (2) Alternatively, YAML file contains file paths data imported processed create_DataFile() called (recommended). function searching objects sample name global environment. Example: samp1 <- Luminescence::read_BIN2R(...) samp1 sample name specified YAML file. details, please see package vignette.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"0.1.0","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"Sebastian Kreutzer, Institute Geography, Ruprecht-Karl University Heidelberg (Germany), parts based code Claire Christophe","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"Kreutzer, S., Christophe, C., 2024. create_DataFile(): Prepare input data subsequent BayLum Analysis. Function version 0.1.0. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_DataFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare input data for subsequent BayLum Analysis — create_DataFile","text":"","code":"##set path to YAML file yaml_file <- system.file(\"extdata/example.yml\", package = \"BayLum\")  samp1_file <- system.file(\"extdata/samp1/bin.bin\", package = \"BayLum\") samp2_file <- system.file(\"extdata/samp2/bin.bin\", package = \"BayLum\")  ## import BIN files samp1 <- Luminescence::read_BIN2R(samp1_file, verbose = FALSE) |>  subset(POSITION == 2 & GRAIN == 32) samp2 <- Luminescence::read_BIN2R(samp2_file, verbose = FALSE) |>  subset(POSITION == 2 & GRAIN == 32)  ## create file create_DataFile(yaml_file) #> ── BayLum - [create_DataFile()] ──────────────────────────────────────────────── #> ⠙ Load YAML configuration file ...  #> ✔ Load YAML configuration file ...  [7ms] #>  #> ⠙ Sanitize sample names ...  #> ✔ Sanitize sample names ...  [19ms] #>  #> ⠙ Generate object list ...  #> Error: [create_DataFile()] <samp1> is not a valid object in the working environment! #> ✖ Generate object list ...  [25ms] #>"},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Folder Templates — create_FolderTemplates","title":"Create Folder Templates — create_FolderTemplates","text":"Create file folder structure templates user hard drive expected Generate_DataFile Generate_DataFile_MG. Files data folders must overwritten manually user data. function intends minimise errors going along creation folder structures. function uses example data BayLum create templates.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Folder Templates — create_FolderTemplates","text":"","code":"create_FolderTemplates(   path,   mode = \"SG\",   n_folders = 1,   names = paste(\"Sample_\", 1:n_folders),   verbose = TRUE )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Folder Templates — create_FolderTemplates","text":"path character (required): path folder templates created mode character (default): depending dataset can create templates single grain (SG) multi-grain (MG) data n_folders numeric (default): number template folders created names character (optional): allows give names subfolders. verbose logical (default): enables/disables verbose mode","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Folder Templates — create_FolderTemplates","text":"templates created successfully hard drive, function returns nothing.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Create Folder Templates — create_FolderTemplates","text":"0.1.0","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Folder Templates — create_FolderTemplates","text":"Sebastian Kreutzer, Geography & Earth Sciences, Aberystwyth University (United Kingdom)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Create Folder Templates — create_FolderTemplates","text":"Kreutzer, S., 2024. create_FolderTemplates(): Create Folder Templates. Function version 0.1.0. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_FolderTemplates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Folder Templates — create_FolderTemplates","text":"","code":"create_FolderTemplates(tempdir()) #>  #> [create_FolderTemplates()] #> -| #>  |__(dir created:) /tmp/Rtmp81DyQC  #> All templates created. Please modify the parameters according to your data!"},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Theta Matrix — create_ThetaMatrix","title":"Create Theta Matrix — create_ThetaMatrix","text":"Create \\(\\Theta\\) matrix shared uncertainties can used input , e.g., AgeS_Computation Age_OSLC14 used covariance matrix \\(\\Sigma\\) (Combès & Philippe, 2017)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Theta Matrix — create_ThetaMatrix","text":"","code":"create_ThetaMatrix(input, output_file = NULL, sigma_s, ...)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Theta Matrix — create_ThetaMatrix","text":"input character data.frame (optional): input data frame file connection import CSV-file needed information. nothing provided function returns input template. argument output_file can used write input template file system output_file character (optional): file path output CSV-file, field separator hard set \",\". Please use utils::write.table flexibility. sigma_s numeric (required): named character values systematic uncertainties. values lab-specific. Can set NULL remove systematic uncertainties. order named vector important, naming! Note: uncertainties unit, please check details. ... arguments can passed utils::read.table (CSV-file import)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Theta Matrix — create_ThetaMatrix","text":"symmetric \\(Theta\\) matrix input missing, data.frame input template","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Theta Matrix — create_ThetaMatrix","text":"function intends ease creation \\(Theta\\) matrix, created straight forward, e.g., base R functions stats::cov. relationship covariance matrix  \\(Sigma\\) \\(Theta\\) given $$\\Sigma_ij = A_i * A_j * \\Theta_ij$$ details see Combès & Philippe, 2017 Guérin et al. (2021). Input modes function supports two different operation modes: input left empty: function returns data.frame template can used input (option output_file works well) input fed data.frame character (file path), \\(\\Theta\\) matrix returned Input format function expects either CSV-file data.frame input. create template can run function leaving argument input empty (see example). Please note format input table (data.frame) needs kept specified template. following table lists meaning columns: Note: columns can set 0 NA column must left empty! value > 0 provided DR_GAMMA_TOTAL value taken values , e.g., DR_GAMMA_K discarded (set 0)! Systematic uncertainties following table provides information named argument can provided via argument sigma_s. Missing values allowed, values must set.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Create Theta Matrix — create_ThetaMatrix","text":"0.1.0","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Create Theta Matrix — create_ThetaMatrix","text":"Kreutzer, S., Guérin, G., 2024. create_ThetaMatrix(): Create Theta Matrix. Function version 0.1.0. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create Theta Matrix — create_ThetaMatrix","text":"Combès, B., Philippe, ., 2017. Bayesian analysis individual systematic multiplicative errors estimating ages stratigraphic constraints optically stimulated luminescence dating. Quaternary Geochronology 39, 24–34. doi:10.1016/j.quageo.2017.02.003 Guérin, G., Lahaye, C., Heydari, M., Autzen, M., Buylaert, J.-P., Guibert, P., Jain, M., Kreutzer, S., Lebrun, B., Murray, .S., Thomsen, K.J., Urbanova, P., Philippe, ., 2021. Towards improvement optically stimulated luminescence (OSL) age uncertainties: modelling OSL ages systematic errors, stratigraphic constraints radiocarbon ages using R package BayLum. Geochronology 3, 229—245. doi:10.5194/gchron-3-229-2021","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Theta Matrix — create_ThetaMatrix","text":"Sebastian Kreutzer, IRAMAT-CRP2A, UMR 5060, CNRS-Université Bordeaux Montaigne (France), based 'MS Excel' sheet Guillaume Guérin, IRAMAT-CRP2A, UMR 5060, CNRS-Université Bordeaux Montaigne (France)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/create_ThetaMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Theta Matrix — create_ThetaMatrix","text":"","code":"##(1) return template data.frame (no file output) create_ThetaMatrix() #> [create_ThetaMatrix()] 'input' missing, input template returned! #>   SAMPLE_ID DR_BETA_K DR_BETA_U DR_BETA_TH DR_GAMMA_K DR_GAMMA_U DR_GAMMA_TH #> 1        NA        NA        NA         NA         NA         NA          NA #>   DR_GAMMA_TOTAL DR_TOTAL DR_TOTAL_X #> 1             NA       NA         NA  if (FALSE) { # \\dontrun{ ##(2) return template as data.frame + file file_path <- tempfile(fileext = \".csv\") create_ThetaMatrix(output_file = file_path )  ##NOT RUNNING EXAMPLE for sigma_s calc_ThetaMatrix(..., sigma_s =  c(  s_betaK = 0.010,  s_betaU = 0.007,  s_betaTh = 0.006,  s_gammaK = 0.010,  s_gammaU = 0.007,  s_gammaTh = 0.006,  s_gammaDR = 0.05,  s_CAL = 0.020,  s_intDR = 0.030))  } # }"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Age Plot — plot_Ages","title":"Create Age Plot — plot_Ages","text":"Create Age Plot","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Age Plot — plot_Ages","text":"","code":"plot_Ages(   object,   sample_names = NULL,   sample_order = NULL,   plot_mode = \"ages\",   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Age Plot — plot_Ages","text":"object list  data.frame (required): Output created functions like AgeC14_Computation, list class BayLum.list. Alternatively function supports data.frame input, however, case data.frame must resemble ages data.frame created computation functions otherwise input silently ignored. sample_names character (optional): alternative sample names used plotting. length provided character vector shorter real number samples, names recycled. sample_order numeric (optional): argument rearrange sample order, e.g., sample_order = c(4:1) plots last sample first. plot_mode character (default): allows switch displaying ages points lines (\"ages\") credible intervals densities (\"density\") ... arguments control plot output, standard arguments : cex, xlim, main, xlab, col (non-standard) arguments : grid (TRUE/FALSE), legend (TRUE/FALSE), legend.text (character input needed), legend.pos graphics::legend, legend.cex. Additional arguments: d_scale (scales density plots), show_ages (add ages density  plots)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Age Plot — plot_Ages","text":"function returns plot data.frame used display data","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Age Plot — plot_Ages","text":"function creates age plot showing mean ages along credible intervals. function provides various arguments modify plot output, however, ultimate control function returns data.frame extracted input object plots.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Create Age Plot — plot_Ages","text":"0.1.5","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Age Plot — plot_Ages","text":"Sebastian Kreutzer, Institute Geography, Ruprecht-Karl-University Heidelberg (Germany), based code written Claire Christophe","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Create Age Plot — plot_Ages","text":"Kreutzer, S., Christophe, C., 2024. plot_Ages(): Create Age Plot. Function version 0.1.5. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Ages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Age Plot — plot_Ages","text":"","code":"## load data data(DATA_C14,envir = environment()) C14Cal <- DATA_C14$C14[,1] SigmaC14Cal <- DATA_C14$C14[,2] Names <- DATA_C14$Names nb_sample <- length(Names)  ## Age computation Age <- AgeC14_Computation(    Data_C14Cal = C14Cal,    Data_SigmaC14Cal = SigmaC14Cal,    SampleNames = Names,    Nb_sample = nb_sample,    PriorAge = rep(c(20,60),nb_sample),    Iter = 500,    quiet = TRUE) #> Warning: [plot_MCMC()] 'n.iter' out of range, reset to number of observations     #>  #>  #> >> MCMC Convergence of Age parameters << #> ---------------------------------------------- #> Sample name   Bayes estimate   Uppers credible interval #> A_S-EVA-26510 \t 1.001 \t\t 1.007  #> A_S-EVA-26506 \t 1.013 \t\t 1.055  #> A_S-EVA-26507 \t 1.008 \t\t 1.015  #> A_S-EVA-26508 \t 1.005 \t\t 1.016  #>  #>  #> --------------------------------------------------------------------------------------------------- #>  *** WARNING: The following information are only valid if the MCMC chains have converged  *** #> --------------------------------------------------------------------------------------------------- #>  #>  #>  #> >> Bayes estimates of Age for each sample and credible interval << #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26510 \t 41.9422725989576  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 41.466 \t\t 42.312  #> \t\t\t\t at level 68% \t 41.81 \t\t 42.223  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26506 \t 45.695127613461  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 45.1 \t\t 46.333  #> \t\t\t\t at level 68% \t 45.509 \t\t 46.041  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26507 \t 44.8682082005776  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 43.577 \t\t 45.902  #> \t\t\t\t at level 68% \t 44.361 \t\t 45.316  #> ------------------------------------------------------ #> Sample name \t Bayes estimate  Credible interval:  #> A_S-EVA-26508 \t 45.0361927849055  #> \t\t\t\t\t\t lower bound \t upper bound #> \t\t\t\t at level 95% \t 43.959 \t\t 46.023  #> \t\t\t\t at level 68% \t 44.473 \t\t 45.401  #>  #> ------------------------------------------------------    ## plot output plot_Ages(Age)  #>        SAMPLE      AGE HPD68.MIN HPD68.MAX HPD95.MIN HPD95.MAX ALT_SAMPLE_NAME #> 1 S-EVA-26510 41.94227    41.810    42.223    41.466    42.312              NA #> 2 S-EVA-26506 45.69513    45.509    46.041    45.100    46.333              NA #> 3 S-EVA-26507 44.86821    44.361    45.316    43.577    45.902              NA #> 4 S-EVA-26508 45.03619    44.473    45.401    43.959    46.023              NA #>   AT #> 1  4 #> 2  3 #> 3  2 #> 4  1  ## plot output plot_Ages(Age, plot_mode = \"density\")  #>        SAMPLE      AGE HPD68.MIN HPD68.MAX HPD95.MIN HPD95.MAX ALT_SAMPLE_NAME #> 1 S-EVA-26510 41.94227    41.810    42.223    41.466    42.312              NA #> 2 S-EVA-26506 45.69513    45.509    46.041    45.100    46.333              NA #> 3 S-EVA-26507 44.86821    44.361    45.316    43.577    45.902              NA #> 4 S-EVA-26508 45.03619    44.473    45.401    43.959    46.023              NA #>   AT #> 1  4 #> 2  3 #> 3  2 #> 4  1"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC trajectories and posterior distributions — plot_MCMC","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"function uses output rjags::jags.model visualise traces MCMC corresponding densities. particular displays posterior distributions age, calculated, palaeodose equivalent dose dispersion parameters sample. function output similar plot output produced 'coda' package, tailored meet needs context 'BayLum' package.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"","code":"plot_MCMC(   object,   sample_names = NULL,   variables = c(\"A\", \"D\", \"sD\"),   axes_labels = c(A = \"Age (ka)\", D = \"D (Gy)\", sD = \"sD (Gy)\"),   n.chains = NULL,   n.iter = 1000,   smooth = FALSE,   rug = TRUE,   plot_single = FALSE,   ... )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"object coda::mcmc.list coda::mcmc (required): Output generated rjags::jags.model, e.g., Age_Computation. Alternatively, limited support provided BayLum.list object input sample_names character (optional): Names used samples. argument overrides optional argument mtext. variables character (default): Variables coda::mcmc object plotted. axes_labels character (default): Axes labels used trace density plots. labels provided named character vector parameter names names used assign axes labelling. labelling x-axis (trace plots) y-axis (density plot) modified. n.chains numeric (optional): Set number chains visualise, nothing provided number chains determined input object n.iter integer (default): Set number iterations visualised trace plots, regardless size input dataset long real number iterations > n.iter. Please note large numbers impact plot performance. smooth logical (default): Enable/disables smooth trace plots using stats::smooth rug logical (default): Enable/disables rug density plots plot_single logical (default): Enables/disables single plot mode function, .e. set TRUE every plot returned single plot par settings can applied. ... arguments can passed modify plot output. Supported arguments lwd, lty, col, type, cex,mtext, cf. mtext mtext plot.default arguments.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"Two plots: Traces MCMC chains corresponding density plots. plots similar coda::traceplot coda::densplot.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"function used function Age_Computation, AgeS_Computation Palaeodose_Computation, can used also standalone plot function.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"0.1.5","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"Sebastian Kreutzer, Institute Geography, Ruprecht-Karl University Heidelberg (Germany). function re-written version function 'MCMC_plot()' Claire Christophe","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"Kreutzer, S., Christophe, C., 2024. plot_MCMC(): Plot MCMC trajectories posterior distributions. Function version 0.1.5. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_MCMC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MCMC trajectories and posterior distributions — plot_MCMC","text":"","code":"data(MCMCsample,envir = environment()) object <- coda::as.mcmc(MCMCsample) plot_MCMC(object)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Regeneration Dose Points — plot_RegDosePoints","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"Simple plot functionality visualise $L_x/T_x$ values dose extracted data created create_DataFile","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"","code":"plot_RegDosePoints(object, nrow = 3L, ncol = nrow, ...)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"object list (required): input object created create_DataFile nrow integer (default): number rows used plot panel ncol integer (default): number columns plot panel ... plot arguments passed modify plot output. Supported arguments xlab, ylab, type, pch, col, cex","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"function returns plot","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"Sebastian Kreutzer, Institute Geography, Heidelberg University (Germany)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"Kreutzer, S., 2024. plot_RegDosePoints(): Plot Regeneration Dose Points. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_RegDosePoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Regeneration Dose Points — plot_RegDosePoints","text":"","code":"data(DATA3,envir = environment()) plot_RegDosePoints(DATA3)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"Create hexbin plot matrix (hexbin::hexplom) age results returned Bayesian age calculation.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"","code":"plot_Scatterplots(   object,   variables = c(\"A\"),   sample_names = NULL,   sample_selection = NULL,   n.chains = NULL,   plot_type = \"hexbin\",   plot_mode = \"matrix\",   ... )  ScatterSamples(...)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"object coda::mcmc.list data.frame (required): mcmc list objects generated rjags::jags.model AgeS_Computation, AgeC14_Computation Age_OSLC14. data.frame provided, first two columns taken NA values automatically removed. function can also handle BayLum.list objects directly certain functions variables character (default): variable selected scatter plot, e.g., \"\". Please note can select one variable time sample_names character (optional): sample names shown plot matrix sample_selection numeric (default): vector samples plotted scatter matrix, e.g., c(1,2) plot first two samples, c(1,3) plot samples 1 3 c(1:3) plot first three samples n.chains integer (default): allows limit number chains shown, default results chains plotted. plot_type character (default): switch different plot types, \"hexbin\" (default), based function hexbin::hexplom smoothScatter (alternative) based highly customised plot function using function graphics::smoothScatter plot_mode character (default): switch matrix plot mode single plot mode. plot mode single works plot_type = smoothScatter creates single plot panel sample. Please note combined par settings. ... arguments control plot output, standard plot arguments supported main, xlab, ylab, xlim, ylim, cex. additional arguments supporting fine tuning plot, see details.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"scatter plot based hexbin::hexplom","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"Additional supported plot arguments following table lists additional arguments supported function order fine tune graphical output. arguments, can just added function call. Example, disabling graphics::rug plot mode smoothScatter can type plot_Scatterplots(..., rug = FALSE) Please note arguments supported plot types.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"0.3.2","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"Sebastian Kreutzer, Institute Geography, Ruprecht-Karl University Heidelberg (Germany) , based function 'ScatterSamples()' Claire Christophe, Anne Philippe, Guillaume Guérin","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"Kreutzer, S., Christophe, C., Philippe, ., Guérin, G., 2024. plot_Scatterplots(): Display Scatter Plot Matrix Bayesian Age Results. Function version 0.3.2. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/plot_Scatterplots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Scatter Plot Matrix of the Bayesian Age Results — plot_Scatterplots","text":"","code":"data(AgeS,envir = environment())  ##hexbin plot_Scatterplots(    object = AgeS$Sampling,    sample_names = c(\"GDB5\", \"GDB3\"),    sample_selection = c(1,2)  )   ##scatter smooth (matrix) plot_Scatterplots(    object = AgeS$Sampling,    sample_names = c(\"GDB5\", \"GDB3\"),    sample_selection = c(1,2),    plot_type = \"smoothScatter\")    ##scatter smooth (single) plot_Scatterplots(    object = AgeS$Sampling,    sample_names = c(\"GDB5\", \"GDB3\"),    sample_selection = c(1,2),    plot_type = \"smoothScatter\",    plot_mode = \"single\")"},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Write BayLum .csv-files — write_BayLumFiles","title":"Write BayLum .csv-files — write_BayLumFiles","text":"function allows user write .csv files expected Generate_DataFile Generate_DataFile_MG. Unlike create_FolderTemplates, function makes possible write .csv files information directly R. modification .csv files required. purpose function () reduce tedious manual editing .csv-files errors result (ii) introduce easy way review information inside .csv-files (revisiting code rather opening individual .csv-files) (iii) streamline folder file creation preparing data run BayLum's modelling functions. Note: user still need move appropriate .bin-files sample folders.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write BayLum .csv-files — write_BayLumFiles","text":"","code":"write_BayLumFiles(   folder,   SampleNames = \"Sample_1\",   BinPerSample = rep(1, length(SampleNames)),   SubSampleNames = NULL,   DiscPos = NULL,   DRenv = 1,   DRenv.error = 0.04,   DRsource = 0.1,   DRsource.error = 0.002,   signal.integral.min = 6,   signal.integral.max = 10,   background.integral.min = 346,   background.integral.max = 395,   inflatePercent = 0.025,   nbOfLastCycleToRemove = 2 )"},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write BayLum .csv-files — write_BayLumFiles","text":"folder character (required*): name main folder subsequent BayLum files folders located. path already existing folder, path/name folder created. SampleNames character (required): Vector sample names. BinPerSample numeric (default): Vector numbers indicating number .bin-files per sample. SubSampleNames character (optional): Vector names give subfolder within sample number .bin-files sample counts one. omitted NULL, subfolders named subfolder count number. DiscPos numeric (default): List data frames data frame one two columns identify aliquots/grains included analysis. first column corresponds position number, second column corresponds grain number. data frame one column, Disc.csv written. data.frame two columns, DiscPos.csv written. length list number .bin-files included. DRenv numeric (default): Vector DRenv[] corresponds environmental dose rate .bin-file[]. Length one number .bin-files included analysis. DRenv.error numeric (default): Vector DRenv.error[] corresponds environmental dose rate error .bin-file[]. Length one number .bin-files included analysis. DRsource numeric (default): Vector DRsource[] corresponds source dose rate .bin-file[]. Length one number .bin-files included analysis. DRsource.error numeric (default): Vector DRsource.error[] corresponds source dose rate error .bin-file[]. Length one number .bin-files included analysis. signal.integral.min numeric (default): Vector signal.integral.min[] corresponds channel number OSL signal summed forbin-file[] Length one number .bin-files included analysis. signal.integral.max numeric (default): Vector signal.integral.max[] corresponds channel number OSL signal summed bin-file[] Length one number .bin-files included analysis. background.integral.min numeric (default): Vector background.integral.min[] corresponds channel number OSL background signal summed forbin-file[] Length one number .bin-files included analysis. background.integral.max numeric (default): Vector background.integral.max[] corresponds channel number OSL background signal summed .bin-file[]. Length one number .bin-files included analysis. inflatePercent numeric (default): Vector inflatePercent[] corresponds uncertainty due instrumental reproducibility tobin-file[] Length one number .bin-files included analysis. nbOfLastCycleToRemove numeric (default): Vector nbOfLastCycleToRemove[] corresponds number regeneration points remove analysis bin-file[] Length one number .bin-files included analysis.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write BayLum .csv-files — write_BayLumFiles","text":"function returns nothing, writes folder structure.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Write BayLum .csv-files — write_BayLumFiles","text":"0.1.0","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write BayLum .csv-files — write_BayLumFiles","text":"Frederik Baumgarten, RadPhys, DTU Physics, Technical University Denmark (Denmark)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Write BayLum .csv-files — write_BayLumFiles","text":"Baumgarten, F.H., 2024. write_BayLumFiles(): Write BayLum .csv-files. Function version 0.1.0. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_BayLumFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write BayLum .csv-files — write_BayLumFiles","text":"","code":"# example samples SampleNames <- c(\"OSL-1-MG\",\"OSL-2-SG\")  # number of .bin-files for each sample BinPerSample <- c(1,3)  # List of data.frames of accepted aliquot/grain to be included # in the analysis for each .bin-file. DiscPos <- list( data.frame(\"position\" = 1:48), data.frame(\"position\" = c(1,1,1,1), \"grain\" = c(4,67,92,99)), data.frame(\"position\" = c(2,2,2,2), \"grain\" = c(7,13,41,72)), data.frame(\"position\" = c(3,3,3,3), \"grain\" = c(7,52,67,88)))  # example 1: write to disk (all together) write_BayLumFiles( folder = paste(tempdir(),\"new_BayLum_folder\",sep = \"/\"), SampleNames = SampleNames, BinPerSample = BinPerSample, DiscPos = DiscPos, DRenv = c(1.75, 1.52, 1.52, 1.52), DRenv.error = c(0.04, 0.03, 0.03, 0.03), DRsource = c(0.2075, 0.1501, 0.1501, 0.1501), DRsource.error = c(0.0010, 0.0008, 0.0008, 0.0008))  # example 2: write to disk (by sample) write_BayLumFiles( folder = paste(tempdir(),\"new_BayLum_folder\",sep = \"/\"), SampleNames = \"OSL-1-MG\", BinPerSample = 1, DiscPos = DiscPos[[1]], DRenv = 1.75, DRenv.error = 0.04, DRsource = 0.2075, DRsource.error = 0.0010)  write_BayLumFiles( folder = paste(tempdir(),\"new_BayLum_folder\",sep = \"/\"), SampleNames = \"OSL-2-SG\", BinPerSample = 3, DiscPos = DiscPos[2:4], DRenv = 1.75, DRenv.error = 0.04, DRsource = 0.2075, DRsource.error = 0.0010)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"little function helps auto-generate BayLum YAML configuration file list can passed create_DataFile. YAML file can modified text editor. allowed parameters extracted reference YAML file","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"","code":"write_YAMLConfigFile(output_file = NULL, ...)"},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"output_file character (default): valid file path output file ... parameters preset YAML file (run write_YAMLConfigFile() see allowed parameters) parameter sample special, can provided character vector length. number elements vector (sample names) used multiply records configuration file.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"function two output modes: (1) output_file = <file_path>: Writes YAML specified path returns path. (2) output_file = NULL: Returns list allowed function parameters can passed function returns list can used passed create_DataFile.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"function-version","dir":"Reference","previous_headings":"","what":"Function version","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"0.1.0","code":""},{"path":[]},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"Sebastian Kreutzer, Institute Geography, Ruprecht-Karl University Heidelberg (Germany)","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"how-to-cite","dir":"Reference","previous_headings":"","what":"How to cite","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"Kreutzer, S., 2024. write_YAMLConfigFile(): Write Auto Generated YAML BayLum Configuration File Disc. Function version 0.1.0. : Christophe, C., Philippe, ., Kreutzer, S., Guérin, G., Baumgarten, F.H., Frerebeau, N., 2024. BayLum: Chronological Bayesian Models Integrating Optically Stimulated. R package version 0.3.3.9000-13. https://CRAN.r-project.org/package=BayLum","code":""},{"path":"https://crp2a.github.io/BayLum/dev/reference/write_YAMLConfigFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Auto Generated YAML BayLum Configuration File to the Disc — write_YAMLConfigFile","text":"","code":"## generate list write_YAMLConfigFile( sample = c(\"samp1\", \"samp2\"), settings.rules.endTest = 10) #> ── Allowed function parameters (start) ───────────────────────────────────────── #> sample #> files #> settings.dose_points #> settings.dose_source.value #> settings.dose_source.error #> settings.dose_env.value #> settings.dose_env.error #> settings.rules.beginSignal #> settings.rules.endSignal #> settings.rules.beginBackground #> settings.rules.endBackground #> settings.rules.beginTest #> settings.rules.endTest #> settings.rules.beginTestBackground #> settings.rules.endTestBackground #> settings.rules.inflatePercent #> settings.rules.nbOfLastCycleToRemove #> ── Allowed function parameters (end) ───────────────────────────────────────────  ## generate file (here written in tempdir) write_YAMLConfigFile(  output_file = tempfile(\"configuration.yml\"),  sample = c(\"samp1\", \"samp2\"),  settings.rules.endTest = 10) #> [1] \"/tmp/Rtmp81DyQC/configuration.yml169f771d97eb.yml\""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-0339000-13","dir":"Changelog","previous_headings":"","what":"BayLum 0.3.3.9000-13","title":"BayLum 0.3.3.9000-13","text":"version BayLum requires R >= 4.3!","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"miscellaneous-0-3-3-9000-13","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"BayLum 0.3.3.9000-13","text":"Fix various anchors manual broken target (CRAN request).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"internals-0-3-3-9000-13","dir":"Changelog","previous_headings":"","what":"Internals","title":"BayLum 0.3.3.9000-13","text":"vignette manual code takes long execute must pre-computed. pre-compute vignette: make changes BayLum.Rmd.orig, run vignettes/precompile.R locally.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-032-2024-04-14","dir":"Changelog","previous_headings":"","what":"BayLum 0.3.2 (2024-04-14)","title":"BayLum 0.3.2 (2024-04-14)","text":"CRAN release: 2024-06-16 version BayLum requires R >= 4.1.x!","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"new-functions-0-3-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"BayLum 0.3.2 (2024-04-14)","text":"one function single-grain multiple-grain data. Support BIN/BINX XSYG files RLum.Analysis-class objects, .e. data can imported independently data file creation. new single-file configuration based YAML format. makes old error-prone folder structure obsolete. Various internal consistency checks avoid input data erroneousness; may lead hard -track-error messages. Carries information number samples sample names. plot_RegDosePoints(): function replace deprecated function LT_RegenDose(), error-prone complicated maintain. write_YAMLConfigFile(): function supplements create_DataFile() supporting auto-generated YAML config template files.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"bugfixes-and-changes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bugfixes and changes","title":"BayLum 0.3.2 (2024-04-14)","text":"Age_OSLC14(): determines sample name automatically default. Age_Computation(): determines sample name automatically default. AgeS_Computation(): determines sample name automatically default. combine_DataFiles(): now preserves originator attribute. Interactive mode now beautiful consistently. Can now extract information object created create_DataFile(). SC_Ordered(): can handle objects created create_DataFile() easier usage.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"miscellaneous-0-3-2","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"BayLum 0.3.2 (2024-04-14)","text":"Drop dependency deprecated package 'ArchaeoPhases' make corresponding code internal function (PR #33, @nfrerebeau). Add dependencies packages 'yaml' 'cli'. Bump version requirement 'Luminescence' >= v0.9.22. Add new external files example.yml yaml_config_reference.yml. Internal datasets DATA1, DATA2, DATA3 updated consistent new function create_DataFile().","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"deprecated-functions-0-3-2","dir":"Changelog","previous_headings":"","what":"Deprecated functions","title":"BayLum 0.3.2 (2024-04-14)","text":"following functions deprecated removed future versions BayLum: Generate_DataFile() Generate_DataFile_MG() LT_RegenDose()","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-031-2023-03-28","dir":"Changelog","previous_headings":"","what":"BayLum 0.3.1 (2023-03-28)","title":"BayLum 0.3.1 (2023-03-28)","text":"CRAN release: 2023-04-13 version BayLum requires R >= 4.1.x!","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"bugfixes-and-changes-0-3-1","dir":"Changelog","previous_headings":"","what":"Bugfixes and changes","title":"BayLum 0.3.1 (2023-03-28)","text":"AgeS_Computation() & Age_OSLC14() two instances MCMC-list. One removed. essentially halves amount memory needed store output functions. (Thanks @guiguerin reporting, #27). AgeS_Computation() crashed reproducibly, THETA matrix (one possibility) provided indeed file name instead matrix object; fixed (thanks M. Heydari reporting). AgeS_Computation() function handles wrong user input Theta matrix friendly converting automatically matrix needed. create_ThetaMatrix() function throw error cases sigma_s obviously wrong; fixed (thanks M. Heydari reporting). Generate_DataFile_MG() function now checks number specified BIN/BINX-files matches actual number BIN/BINX-files present folders. , warning prompted. prevents hard--track-error messages odd modelling results erroneously encourage searching problems JAGS BayLum models. plot_Ages() gained couple new arguments. First, plot_mode allows switch standard plot output \"ages\" (default) new option \"density\". latter draws probability density curves instead lines. arguments specific plot_mode = \"density\" d_scale scale density plots height show_ages show Bayes estimator. generally, legend.cex added enable convenient scaling legend fonts; works plot modes. plot_MCMC() gained additional support BayLum.list returned Age_OSLC14(). plot_Scatterplots() functions can now handle BayLum.list objects returned certain functions. Currently: AgesS_Computation(), Age_OSLC14().","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-030-2022-10-28","dir":"Changelog","previous_headings":"","what":"BayLum 0.3.0 (2022-10-28)","title":"BayLum 0.3.0 (2022-10-28)","text":"version BayLum requires R >= 4.1.x!","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"new-functions-0-3-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"BayLum 0.3.0 (2022-10-28)","text":"write_BayLumFiles(): @imgoej contributed excellent new function creates folders files needed BayLum, making lot easier less error-prone work BayLum.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"bugfixes-and-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bugfixes and changes","title":"BayLum 0.3.0 (2022-10-28)","text":"AgeS_Computation(): function now supports parallel processing using package 'rungjags' (thanks @imgoej) Regression error, function tried observe variables actually model; fixed. (thanks @imgoej, #21). function now supports parallel processing using package 'rungjags' (thanks @imgoej).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"internals-0-3-0","dir":"Changelog","previous_headings":"","what":"Internals","title":"BayLum 0.3.0 (2022-10-28)","text":"fixes regarding string comparisons () conditions. Fix CRAN warning regarding Escaped LaTeX specials: \\&.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-021-2022-02-20","dir":"Changelog","previous_headings":"","what":"BayLum 0.2.1 (2022-02-20)","title":"BayLum 0.2.1 (2022-02-20)","text":"CRAN release: 2022-02-21 Note: package version needs least R >= 4.0.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"bugfixes--changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bugfixes & changes","title":"BayLum 0.2.1 (2022-02-20)","text":"AgeS_Computation(): function crashed jags_method = \"rjparallel\" runtime error due missing information RNG type; fixed (thanks @imgoej spotting). jags_method = \"rjparallel\" inits preset specific value random number generator. setting led crash function probably caused harm, setting make sense. Now, random number generator settings (seed, type etc.) can provided via argument inits, passed runjags::autorun.jags. default NA maintain expected behaviour jags_method = \"rjparallel\" used. function gained new argument model inject custom models run parameters already defined model. option allows adjust priors likelihoods test different scenarios. Please option works without safety net, mean function check whether parameters model actually available. function now returns used model character string, combination new parameter model can used modify model fly. Age_OSLC14(): add support \"rjparallel\" via new argument jags_method = \"rjparallel\", like AgeS_Computation() (thanks @imgoej, #20). Generate_DataFile_MG(): function gained new argument force_run1_at_a_time. set TRUE automatically orders curves BIN/BINX-file following “Run 1 time” option. Regardless whether option used measurement . Please note: work assigned position number one time different aliquots. verbose = FALSE respected circumstances; fixed.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-020-2020-12-06","dir":"Changelog","previous_headings":"","what":"BayLum 0.2.0 (2020-12-06)","title":"BayLum 0.2.0 (2020-12-06)","text":"CRAN release: 2020-12-06 Note: package version needs least R >= 3.5.0.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"bugfixes--changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bugfixes & changes","title":"BayLum 0.2.0 (2020-12-06)","text":"Now stops mismatch encountered number samples matrix provided via THETA prevent JAGS runtime error. function experimentally gained new argument jags_method support full automated processing parallel using R package 'runjags'; including ... argument detailed control. default calculation done simply via 'rjags' usual. Add additional output enhance output table additional information (#11). CSV-file option now returns age HPD intervals bugs model gaussian distribution work due wrongly set index (#13); fixed. small number samples used first C-14 sample JAGS crashed; now throws comprehensible error message (#14). Generate_DataFile_MG(): now works preselected records; limitation OSL removed. sorting samples graph work expected; along new argument sample_order added. function accepts data.frame alternative input, data.frame similar data frames created computation functions (e.g., AgeS_Computation()). option enables manual creation age plots self-compiled data. Accidentally function display chains 9 samples; fixed (thanks Maryam Heydari). Now function understand output AgeS_Computation() automated treatment. Wrong variable names now lead warning instead stop. less aggressive makes function easier use users use plot functionality BayLum. Line breaks leading trailing white space now removed character (vector) provided via sample_names number selected samples via sample_selection shorter number names provided sample_names function returned subscript bounds error; fixed (reported Maryam Heydari).","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"internals-0-2-0","dir":"Changelog","previous_headings":"","what":"Internals","title":"BayLum 0.2.0 (2020-12-06)","text":"models now come example showing can inspected (examples working). Fix couple documentation glitches (e.g., part documentation missing). Smooth creation BayLum.list objects using central internal function. Add new C-14 calibration data unify names datasets. Allowed inputs \"IntCal13\",\"IntCal20\",\"Marine13\",\"Marine20\", \"SHCal13\", \"SHCal20\" dataset must stored CSV file.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"new-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"BayLum 0.2.0 (2020-12-06)","text":"create_ThetaMatrix() function helper create theta matrix can provided input functions AgeS_Computation() Age_OSLC14(). create_FolderTemplates() creates folder file structures required Generate_DataFile() Generate_DataFile_MG() user’s hard drive.","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-013","dir":"Changelog","previous_headings":"","what":"BayLum 0.1.3","title":"BayLum 0.1.3","text":"CRAN release: 2018-09-19","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-012","dir":"Changelog","previous_headings":"","what":"BayLum 0.1.2","title":"BayLum 0.1.2","text":"CRAN release: 2018-06-22","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-011","dir":"Changelog","previous_headings":"","what":"BayLum 0.1.1","title":"BayLum 0.1.1","text":"CRAN release: 2017-09-07","code":""},{"path":"https://crp2a.github.io/BayLum/dev/news/index.html","id":"baylum-010","dir":"Changelog","previous_headings":"","what":"BayLum 0.1.0","title":"BayLum 0.1.0","text":"CRAN release: 2017-09-01 Initial CRAN submission.","code":""}]
